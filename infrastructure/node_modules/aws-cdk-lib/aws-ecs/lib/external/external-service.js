"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ExternalService=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},base_service_1=()=>{var tmp=require("../base/base-service");return base_service_1=()=>tmp,tmp},from_service_attributes_1=()=>{var tmp=require("../base/from-service-attributes");return from_service_attributes_1=()=>tmp,tmp},task_definition_1=()=>{var tmp=require("../base/task-definition");return task_definition_1=()=>tmp,tmp};let ExternalService=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=base_service_1().BaseService,_instanceExtraInitializers=[],_attachToApplicationTargetGroup_decorators,_loadBalancerTarget_decorators,_registerLoadBalancerTargets_decorators,_autoScaleTaskCount_decorators,_enableCloudMap_decorators,_associateCloudMapService_decorators;var ExternalService2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_attachToApplicationTargetGroup_decorators=[(0,metadata_resource_1().MethodMetadata)()],_loadBalancerTarget_decorators=[(0,metadata_resource_1().MethodMetadata)()],_registerLoadBalancerTargets_decorators=[(0,metadata_resource_1().MethodMetadata)()],_autoScaleTaskCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_enableCloudMap_decorators=[(0,metadata_resource_1().MethodMetadata)()],_associateCloudMapService_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_attachToApplicationTargetGroup_decorators,{kind:"method",name:"attachToApplicationTargetGroup",static:!1,private:!1,access:{has:obj=>"attachToApplicationTargetGroup"in obj,get:obj=>obj.attachToApplicationTargetGroup},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_loadBalancerTarget_decorators,{kind:"method",name:"loadBalancerTarget",static:!1,private:!1,access:{has:obj=>"loadBalancerTarget"in obj,get:obj=>obj.loadBalancerTarget},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_registerLoadBalancerTargets_decorators,{kind:"method",name:"registerLoadBalancerTargets",static:!1,private:!1,access:{has:obj=>"registerLoadBalancerTargets"in obj,get:obj=>obj.registerLoadBalancerTargets},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_autoScaleTaskCount_decorators,{kind:"method",name:"autoScaleTaskCount",static:!1,private:!1,access:{has:obj=>"autoScaleTaskCount"in obj,get:obj=>obj.autoScaleTaskCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_enableCloudMap_decorators,{kind:"method",name:"enableCloudMap",static:!1,private:!1,access:{has:obj=>"enableCloudMap"in obj,get:obj=>obj.enableCloudMap},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_associateCloudMapService_decorators,{kind:"method",name:"associateCloudMapService",static:!1,private:!1,access:{has:obj=>"associateCloudMapService"in obj,get:obj=>obj.associateCloudMapService},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),ExternalService2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ecs.ExternalService",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ecs.ExternalService";static fromExternalServiceArn(scope,id,externalServiceArn){class Import extends core_1().Resource{serviceArn=externalServiceArn;serviceName=core_1().Stack.of(scope).splitArn(externalServiceArn,core_1().ArnFormat.SLASH_RESOURCE_NAME).resourceName}return new Import(scope,id)}static fromExternalServiceAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_ExternalServiceAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromExternalServiceAttributes),error}return(0,from_service_attributes_1().fromServiceAttributes)(scope,id,attrs)}constructor(scope,id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_ExternalServiceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,ExternalService2),error}if(props.daemon){if(props.deploymentController?.type===base_service_1().DeploymentControllerType.EXTERNAL||props.deploymentController?.type===base_service_1().DeploymentControllerType.CODE_DEPLOY)throw new(core_1()).ValidationError("CODE_DEPLOY or EXTERNAL deployment controller types don't support the DAEMON scheduling strategy.",scope);if(props.desiredCount!==void 0)throw new(core_1()).ValidationError("Daemon mode launches one task on every instance. Cannot specify desiredCount when daemon mode is enabled.",scope);if(props.maxHealthyPercent!==void 0&&props.maxHealthyPercent!==100)throw new(core_1()).ValidationError("Maximum percent must be 100 when daemon mode is enabled.",scope)}if(props.minHealthyPercent!==void 0&&props.maxHealthyPercent!==void 0&&props.minHealthyPercent>=props.maxHealthyPercent)throw new(core_1()).ValidationError("Minimum healthy percent must be less than maximum healthy percent.",scope);if(props.taskDefinition.compatibility!==task_definition_1().Compatibility.EXTERNAL)throw new(core_1()).ValidationError("Supplied TaskDefinition is not configured for compatibility with ECS Anywhere cluster",scope);if(props.cluster.defaultCloudMapNamespace!==void 0)throw new(core_1()).ValidationError(`Cloud map integration is not supported for External service ${props.cluster.defaultCloudMapNamespace}`,scope);if(props.cloudMapOptions!==void 0)throw new(core_1()).ValidationError("Cloud map options are not supported for External service",scope);if(props.capacityProviderStrategies!==void 0)throw new(core_1()).ValidationError("Capacity Providers are not supported for External service",scope);const propagateTagsFromSource=props.propagateTags??base_service_1().PropagatedTagSource.NONE;super(scope,id,{...props,desiredCount:props.desiredCount,maxHealthyPercent:props.maxHealthyPercent===void 0?100:props.maxHealthyPercent,minHealthyPercent:props.minHealthyPercent===void 0?0:props.minHealthyPercent,launchType:base_service_1().LaunchType.EXTERNAL,propagateTags:propagateTagsFromSource,enableECSManagedTags:props.enableECSManagedTags},{cluster:props.cluster.clusterName,taskDefinition:props.deploymentController?.type===base_service_1().DeploymentControllerType.EXTERNAL?void 0:props.taskDefinition.taskDefinitionArn,schedulingStrategy:props.daemon?"DAEMON":void 0},props.taskDefinition),__runInitializers(this,_instanceExtraInitializers),(0,metadata_resource_1().addConstructMetadata)(this,props),this.node.addValidation({validate:()=>this.taskDefinition.defaultContainer?[]:["A TaskDefinition must have at least one essential container"]}),this.node.addValidation({validate:()=>this.networkConfiguration!==void 0?["Network configurations not supported for an external service"]:[]}),props.minHealthyPercent===void 0&&core_1().Annotations.of(this).addWarningV2("@aws-cdk/aws-ecs:minHealthyPercentExternal","minHealthyPercent has not been configured so the default value of 0% for an external service is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705")}attachToApplicationTargetGroup(_targetGroup){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(_targetGroup)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.attachToApplicationTargetGroup),error}throw new(core_1()).ValidationError("Application load balancer cannot be attached to an external service",this)}loadBalancerTarget(_options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_LoadBalancerTargetOptions(_options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.loadBalancerTarget),error}throw new(core_1()).ValidationError("External service cannot be attached as load balancer targets",this)}registerLoadBalancerTargets(..._targets){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_EcsTarget(_targets)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.registerLoadBalancerTargets),error}throw new(core_1()).ValidationError("External service cannot be registered as load balancer targets",this)}configureAwsVpcNetworkingWithSecurityGroups(_vpc,_assignPublicIp,_vpcSubnets,_securityGroups){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_IVpc(_vpc),jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_SubnetSelection(_vpcSubnets)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.configureAwsVpcNetworkingWithSecurityGroups),error}throw new(core_1()).ValidationError("Only Bridge network mode is supported for external service",this)}autoScaleTaskCount(_props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_applicationautoscaling_EnableScalingProps(_props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.autoScaleTaskCount),error}throw new(core_1()).ValidationError("Autoscaling not supported for external service",this)}enableCloudMap(_options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_CloudMapOptions(_options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.enableCloudMap),error}throw new(core_1()).ValidationError("Cloud map integration not supported for an external service",this)}associateCloudMapService(_options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_AssociateCloudMapServiceOptions(_options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.associateCloudMapService),error}throw new(core_1()).ValidationError("Cloud map service association is not supported for an external service",this)}static{__runInitializers(_classThis,_classExtraInitializers)}};return ExternalService2=_classThis})();exports.ExternalService=ExternalService;
