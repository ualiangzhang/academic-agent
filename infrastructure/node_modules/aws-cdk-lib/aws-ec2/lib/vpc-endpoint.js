"use strict";var __esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0},__runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.InterfaceVpcEndpoint=exports.InterfaceVpcEndpointAwsService=exports.InterfaceVpcEndpointService=exports.GatewayVpcEndpoint=exports.GatewayVpcEndpointAwsService=exports.VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint=exports.VpcEndpointDnsRecordIpType=exports.VpcEndpointIpAddressType=exports.VpcEndpointType=exports.VpcEndpoint=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var connections_1=()=>{var tmp=require("./connections");return connections_1=()=>tmp,tmp},ec2_generated_1=()=>{var tmp=require("./ec2.generated");return ec2_generated_1=()=>tmp,tmp},peer_1=()=>{var tmp=require("./peer");return peer_1=()=>tmp,tmp},port_1=()=>{var tmp=require("./port");return port_1=()=>tmp,tmp},security_group_1=()=>{var tmp=require("./security-group");return security_group_1=()=>tmp,tmp},util_1=()=>{var tmp=require("./util");return util_1=()=>tmp,tmp},iam=()=>{var tmp=require("../../aws-iam");return iam=()=>tmp,tmp},cxschema=()=>{var tmp=require("../../cloud-assembly-schema");return cxschema=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};class VpcEndpoint extends core_1().Resource{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.VpcEndpoint",version:"2.220.0"};policyDocument;get vpcEndpointRef(){return{vpcEndpointId:this.vpcEndpointId}}addToPolicy(statement){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_PolicyStatement(statement)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addToPolicy),error}if(!statement.hasPrincipal)throw new(core_1()).ValidationError("Statement must have a `Principal`.",this);this.policyDocument||(this.policyDocument=new(iam()).PolicyDocument),this.policyDocument.addStatements(statement)}}exports.VpcEndpoint=VpcEndpoint;var VpcEndpointType;(function(VpcEndpointType2){VpcEndpointType2.INTERFACE="Interface",VpcEndpointType2.GATEWAY="Gateway",VpcEndpointType2.GATEWAYLOADBALANCER="GatewayLoadBalancer",VpcEndpointType2.SERVICENETWORK="ServiceNetwork",VpcEndpointType2.RESOURCE="Resource"})(VpcEndpointType||(exports.VpcEndpointType=VpcEndpointType={}));var VpcEndpointIpAddressType;(function(VpcEndpointIpAddressType2){VpcEndpointIpAddressType2.IPV4="ipv4",VpcEndpointIpAddressType2.IPV6="ipv6",VpcEndpointIpAddressType2.DUALSTACK="dualstack"})(VpcEndpointIpAddressType||(exports.VpcEndpointIpAddressType=VpcEndpointIpAddressType={}));var VpcEndpointDnsRecordIpType;(function(VpcEndpointDnsRecordIpType2){VpcEndpointDnsRecordIpType2.IPV4="ipv4",VpcEndpointDnsRecordIpType2.IPV6="ipv6",VpcEndpointDnsRecordIpType2.DUALSTACK="dualstack",VpcEndpointDnsRecordIpType2.SERVICE_DEFINED="service-defined"})(VpcEndpointDnsRecordIpType||(exports.VpcEndpointDnsRecordIpType=VpcEndpointDnsRecordIpType={}));var VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint;(function(VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint2){VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint2.ALL_RESOLVERS="AllResolvers",VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint2.ONLY_INBOUND_RESOLVER="OnlyInboundResolver"})(VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint||(exports.VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint=VpcEndpointPrivateDnsOnlyForInboundResolverEndpoint={}));class GatewayVpcEndpointAwsService{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.GatewayVpcEndpointAwsService",version:"2.220.0"};static DYNAMODB=new GatewayVpcEndpointAwsService("dynamodb");static S3=new GatewayVpcEndpointAwsService("s3");static S3_EXPRESS=new GatewayVpcEndpointAwsService("s3express");name;constructor(name,prefix){this.name=`${prefix||"com.amazonaws"}.${core_1().Aws.REGION}.${name}`}}exports.GatewayVpcEndpointAwsService=GatewayVpcEndpointAwsService;let GatewayVpcEndpoint=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=VpcEndpoint;var GatewayVpcEndpoint2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),GatewayVpcEndpoint2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.GatewayVpcEndpoint",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ec2.GatewayVpcEndpoint";static fromGatewayVpcEndpointId(scope,id,gatewayVpcEndpointId){class Import extends VpcEndpoint{vpcEndpointId=gatewayVpcEndpointId}return new Import(scope,id)}vpcEndpointId;vpcEndpointCreationTimestamp;vpcEndpointNetworkInterfaceIds;vpcEndpointDnsEntries;constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_GatewayVpcEndpointProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,GatewayVpcEndpoint2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const subnets=props.subnets?(0,util_1().flatten)(props.subnets.map(s=>props.vpc.selectSubnets(s).subnets)):[...props.vpc.privateSubnets,...props.vpc.publicSubnets,...props.vpc.isolatedSubnets],routeTableIds=(0,util_1().allRouteTableIds)(subnets);if(routeTableIds.length===0)throw new(core_1()).ValidationError("Can't add a gateway endpoint to VPC; route table IDs are not available",this);const endpoint=new(ec2_generated_1()).CfnVPCEndpoint(this,"Resource",{policyDocument:core_1().Lazy.any({produce:()=>this.policyDocument}),routeTableIds,serviceName:props.service.name,vpcEndpointType:VpcEndpointType.GATEWAY,vpcId:props.vpc.vpcId});this.vpcEndpointId=endpoint.ref,this.vpcEndpointCreationTimestamp=endpoint.attrCreationTimestamp,this.vpcEndpointDnsEntries=endpoint.attrDnsEntries,this.vpcEndpointNetworkInterfaceIds=endpoint.attrNetworkInterfaceIds}static{__runInitializers(_classThis,_classExtraInitializers)}};return GatewayVpcEndpoint2=_classThis})();exports.GatewayVpcEndpoint=GatewayVpcEndpoint;class InterfaceVpcEndpointService{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.InterfaceVpcEndpointService",version:"2.220.0"};name;port;privateDnsDefault=!1;constructor(name,port){this.name=name,this.port=port||443}}exports.InterfaceVpcEndpointService=InterfaceVpcEndpointService;class InterfaceVpcEndpointAwsService{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.InterfaceVpcEndpointAwsService",version:"2.220.0"};static ACCESS_ANALYZER=new InterfaceVpcEndpointAwsService("access-analyzer");static ACCOUNT_MANAGEMENT=new InterfaceVpcEndpointAwsService("account");static AIRFLOW_API=new InterfaceVpcEndpointAwsService("airflow.api");static AIRFLOW_API_FIPS=new InterfaceVpcEndpointAwsService("airflow.api-fips");static AIRFLOW_ENV=new InterfaceVpcEndpointAwsService("airflow.env");static AIRFLOW_ENV_FIPS=new InterfaceVpcEndpointAwsService("airflow.env-fips");static AIRFLOW_OPS=new InterfaceVpcEndpointAwsService("airflow.ops");static APIGATEWAY=new InterfaceVpcEndpointAwsService("execute-api");static APP_MESH=new InterfaceVpcEndpointAwsService("appmesh-envoy-management");static APP_MESH_ENVOY_MANAGEMENT=new InterfaceVpcEndpointAwsService("appmesh-envoy-management");static APP_MESH_OPS=new InterfaceVpcEndpointAwsService("appmesh");static APP_RUNNER=new InterfaceVpcEndpointAwsService("apprunner");static APP_RUNNER_REQUESTS=new InterfaceVpcEndpointAwsService("apprunner.requests");static APP_SYNC=new InterfaceVpcEndpointAwsService("appsync-api");static APPCONFIG=new InterfaceVpcEndpointAwsService("appconfig");static APPCONFIGDATA=new InterfaceVpcEndpointAwsService("appconfigdata");static APPLICATION_AUTOSCALING=new InterfaceVpcEndpointAwsService("application-autoscaling");static APPLICATION_DISCOVERY_ARSENAL=new InterfaceVpcEndpointAwsService("arsenal-discovery");static APPLICATION_DISCOVERY_SERVICE=new InterfaceVpcEndpointAwsService("discovery");static APPLICATION_MIGRATION_SERVICE=new InterfaceVpcEndpointAwsService("mgn");static APPSTREAM_API=new InterfaceVpcEndpointAwsService("appstream.api");static APPSTREAM_STREAMING=new InterfaceVpcEndpointAwsService("appstream.streaming");static ATHENA=new InterfaceVpcEndpointAwsService("athena");static AUDIT_MANAGER=new InterfaceVpcEndpointAwsService("auditmanager");static AUTOSCALING=new InterfaceVpcEndpointAwsService("autoscaling");static AUTOSCALING_PLANS=new InterfaceVpcEndpointAwsService("autoscaling-plans");static B2B_DATA_INTERCHANGE=new InterfaceVpcEndpointAwsService("b2bi");static BACKUP=new InterfaceVpcEndpointAwsService("backup");static BACKUP_GATEWAY=new InterfaceVpcEndpointAwsService("backup-gateway");static BATCH=new InterfaceVpcEndpointAwsService("batch");static BEDROCK=new InterfaceVpcEndpointAwsService("bedrock");static BEDROCK_AGENT=new InterfaceVpcEndpointAwsService("bedrock-agent");static BEDROCK_AGENT_RUNTIME=new InterfaceVpcEndpointAwsService("bedrock-agent-runtime");static BEDROCK_AGENTCORE=new InterfaceVpcEndpointAwsService("bedrock-agentcore");static BEDROCK_AGENTCORE_GATEWAY=new InterfaceVpcEndpointAwsService("bedrock-agentcore.gateway");static BEDROCK_RUNTIME=new InterfaceVpcEndpointAwsService("bedrock-runtime");static BEDROCK_DATA_AUTOMATION=new InterfaceVpcEndpointAwsService("bedrock-data-automation");static BEDROCK_DATA_AUTOMATION_FIPS=new InterfaceVpcEndpointAwsService("bedrock-data-automation-fips");static BEDROCK_DATA_AUTOMATION_RUNTIME=new InterfaceVpcEndpointAwsService("bedrock-data-automation-runtime");static BEDROCK_DATA_AUTOMATION_RUNTIME_FIPS=new InterfaceVpcEndpointAwsService("bedrock-data-automation-runtime-fips");static BILLING=new InterfaceVpcEndpointAwsService("billing");static BILLING_AND_COST_MANAGEMENT_FREETIER=new InterfaceVpcEndpointAwsService("freetier","aws.api");static BILLING_AND_COST_MANAGEMENT_TAX=new InterfaceVpcEndpointAwsService("tax");static BILLING_CONDUCTOR=new InterfaceVpcEndpointAwsService("billingconductor");static BRAKET=new InterfaceVpcEndpointAwsService("braket");static CLEAN_ROOMS=new InterfaceVpcEndpointAwsService("cleanrooms");static CLEAN_ROOMS_ML=new InterfaceVpcEndpointAwsService("cleanrooms-ml");static CLOUD_CONTROL_API=new InterfaceVpcEndpointAwsService("cloudcontrolapi");static CLOUD_CONTROL_API_FIPS=new InterfaceVpcEndpointAwsService("cloudcontrolapi-fips");static CLOUD_DIRECTORY=new InterfaceVpcEndpointAwsService("clouddirectory");static CLOUD_MAP_DATA_SERVICE_DISCOVERY=new InterfaceVpcEndpointAwsService("data-servicediscovery");static CLOUD_MAP_DATA_SERVICE_DISCOVERY_FIPS=new InterfaceVpcEndpointAwsService("data-servicediscovery-fips");static CLOUD_MAP_SERVICE_DISCOVERY=new InterfaceVpcEndpointAwsService("servicediscovery");static CLOUD_MAP_SERVICE_DISCOVERY_FIPS=new InterfaceVpcEndpointAwsService("servicediscovery-fips");static CLOUDFORMATION=new InterfaceVpcEndpointAwsService("cloudformation");static CLOUDHSM=new InterfaceVpcEndpointAwsService("cloudhsmv2");static CLOUDTRAIL=new InterfaceVpcEndpointAwsService("cloudtrail");static CODEWHISPERER=new InterfaceVpcEndpointAwsService("codewhisperer");static CLOUDWATCH=new InterfaceVpcEndpointAwsService("monitoring");static CLOUDWATCH_APPLICATION_INSIGHTS=new InterfaceVpcEndpointAwsService("applicationinsights");static CLOUDWATCH_APPLICATION_SIGNALS=new InterfaceVpcEndpointAwsService("application-signals");static CLOUDWATCH_EVENTS=new InterfaceVpcEndpointAwsService("events");static CLOUDWATCH_EVIDENTLY=new InterfaceVpcEndpointAwsService("evidently");static CLOUDWATCH_EVIDENTLY_DATAPLANE=new InterfaceVpcEndpointAwsService("evidently-dataplane");static CLOUDWATCH_LOGS=new InterfaceVpcEndpointAwsService("logs");static CLOUDWATCH_MONITORING=new InterfaceVpcEndpointAwsService("monitoring");static CLOUDWATCH_NETWORK_MONITOR=new InterfaceVpcEndpointAwsService("networkmonitor");static CLOUDWATCH_RUM=new InterfaceVpcEndpointAwsService("rum");static CLOUDWATCH_RUM_DATAPLANE=new InterfaceVpcEndpointAwsService("rum-dataplane");static CLOUDWATCH_SYNTHETICS=new InterfaceVpcEndpointAwsService("synthetics");static CLOUDWATCH_SYNTHETICS_FIPS=new InterfaceVpcEndpointAwsService("synthetics-fips");static CODEARTIFACT_API=new InterfaceVpcEndpointAwsService("codeartifact.api");static CODEARTIFACT_REPOSITORIES=new InterfaceVpcEndpointAwsService("codeartifact.repositories");static CODEBUILD=new InterfaceVpcEndpointAwsService("codebuild");static CODEBUILD_FIPS=new InterfaceVpcEndpointAwsService("codebuild-fips");static CODECATALYST=new InterfaceVpcEndpointAwsService("codecatalyst","aws.api.global",void 0,{global:!0});static CODECATALYST_GIT=new InterfaceVpcEndpointAwsService("codecatalyst.git");static CODECATALYST_PACKAGES=new InterfaceVpcEndpointAwsService("codecatalyst.packages");static CODECOMMIT=new InterfaceVpcEndpointAwsService("codecommit");static CODECOMMIT_FIPS=new InterfaceVpcEndpointAwsService("codecommit-fips");static CODEDEPLOY=new InterfaceVpcEndpointAwsService("codedeploy");static CODEDEPLOY_COMMANDS_SECURE=new InterfaceVpcEndpointAwsService("codedeploy-commands-secure");static CODEGURU_PROFILER=new InterfaceVpcEndpointAwsService("codeguru-profiler");static CODEGURU_REVIEWER=new InterfaceVpcEndpointAwsService("codeguru-reviewer");static CODEPIPELINE=new InterfaceVpcEndpointAwsService("codepipeline");static CODESTAR_CONNECTIONS=new InterfaceVpcEndpointAwsService("codestar-connections.api");static CODE_CONNECTIONS=new InterfaceVpcEndpointAwsService("codeconnections.api");static COMPREHEND=new InterfaceVpcEndpointAwsService("comprehend");static COMPREHEND_MEDICAL=new InterfaceVpcEndpointAwsService("comprehendmedical");static COMPUTE_OPTIMIZER=new InterfaceVpcEndpointAwsService("compute-optimizer");static CONFIG=new InterfaceVpcEndpointAwsService("config");static CONNECT_APP_INTEGRATIONS=new InterfaceVpcEndpointAwsService("app-integrations");static CONNECT_CASES=new InterfaceVpcEndpointAwsService("cases");static CONNECT_CONNECT_CAMPAIGNS=new InterfaceVpcEndpointAwsService("connect-campaigns");static CONNECT_PROFILE=new InterfaceVpcEndpointAwsService("profile");static CONNECT_VOICEID=new InterfaceVpcEndpointAwsService("voiceid");static CONNECT_WISDOM=new InterfaceVpcEndpointAwsService("wisdom");static CONTROL_CATALOG=new InterfaceVpcEndpointAwsService("controlcatalog");static COST_EXPLORER=new InterfaceVpcEndpointAwsService("ce");static COST_OPTIMIZATION_HUB=new InterfaceVpcEndpointAwsService("cost-optimization-hub");static DATA_EXCHANGE=new InterfaceVpcEndpointAwsService("dataexchange");static DATA_EXPORTS=new InterfaceVpcEndpointAwsService("bcm-data-exports","aws.api");static DATASYNC=new InterfaceVpcEndpointAwsService("datasync");static DATAZONE=new InterfaceVpcEndpointAwsService("datazone");static DATABASE_MIGRATION_SERVICE=new InterfaceVpcEndpointAwsService("dms");static DATABASE_MIGRATION_SERVICE_FIPS=new InterfaceVpcEndpointAwsService("dms-fips");static DEADLINE_CLOUD_MANAGEMENT=new InterfaceVpcEndpointAwsService("deadline.management");static DEADLINE_CLOUD_SCHEDULING=new InterfaceVpcEndpointAwsService("deadline.scheduling");static DEVOPS_GURU=new InterfaceVpcEndpointAwsService("devops-guru");static DIRECTORY_SERVICE=new InterfaceVpcEndpointAwsService("ds");static DIRECTORY_SERVICE_DATA=new InterfaceVpcEndpointAwsService("ds-data");static DSQL_MANAGEMENT=new InterfaceVpcEndpointAwsService("dsql");static DYNAMODB=new InterfaceVpcEndpointAwsService("dynamodb");static DYNAMODB_FIPS=new InterfaceVpcEndpointAwsService("dynamodb-fips");static DYNAMODB_STREAMS=new InterfaceVpcEndpointAwsService("dynamodb-streams");static EBS_DIRECT=new InterfaceVpcEndpointAwsService("ebs");static EC2=new InterfaceVpcEndpointAwsService("ec2");static EC2_MESSAGES=new InterfaceVpcEndpointAwsService("ec2messages");static ECR=new InterfaceVpcEndpointAwsService("ecr.api");static ECR_DOCKER=new InterfaceVpcEndpointAwsService("ecr.dkr");static ECS=new InterfaceVpcEndpointAwsService("ecs");static ECS_AGENT=new InterfaceVpcEndpointAwsService("ecs-agent");static ECS_TELEMETRY=new InterfaceVpcEndpointAwsService("ecs-telemetry");static EKS=new InterfaceVpcEndpointAwsService("eks");static EKS_AUTH=new InterfaceVpcEndpointAwsService("eks-auth");static ELASTIC_BEANSTALK=new InterfaceVpcEndpointAwsService("elasticbeanstalk");static ELASTIC_BEANSTALK_HEALTH=new InterfaceVpcEndpointAwsService("elasticbeanstalk-health");static ELASTIC_DISASTER_RECOVERY=new InterfaceVpcEndpointAwsService("drs");static ELASTIC_FILESYSTEM=new InterfaceVpcEndpointAwsService("elasticfilesystem");static ELASTIC_FILESYSTEM_FIPS=new InterfaceVpcEndpointAwsService("elasticfilesystem-fips");static ELASTIC_INFERENCE_RUNTIME=new InterfaceVpcEndpointAwsService("elastic-inference.runtime");static ELASTIC_LOAD_BALANCING=new InterfaceVpcEndpointAwsService("elasticloadbalancing");static ELASTICACHE=new InterfaceVpcEndpointAwsService("elasticache");static ELASTICACHE_FIPS=new InterfaceVpcEndpointAwsService("elasticache-fips");static ELEMENTAL_MEDIACONNECT=new InterfaceVpcEndpointAwsService("mediaconnect");static EMAIL_SMTP=new InterfaceVpcEndpointAwsService("email-smtp");static EMR=new InterfaceVpcEndpointAwsService("elasticmapreduce");static EMR_EKS=new InterfaceVpcEndpointAwsService("emr-containers");static EMR_SERVERLESS=new InterfaceVpcEndpointAwsService("emr-serverless");static EMR_SERVERLESS_LIVY=new InterfaceVpcEndpointAwsService("emr-serverless-services.livy");static EMR_SERVERLESS_DASHBOARD=new InterfaceVpcEndpointAwsService("emr-serverless.dashboard");static EMR_WAL=new InterfaceVpcEndpointAwsService("emrwal.prod");static END_USER_MESSAGING_SOCIAL=new InterfaceVpcEndpointAwsService("social-messaging");static ENTITY_RESOLUTION=new InterfaceVpcEndpointAwsService("entityresolution");static EVENTBRIDGE=new InterfaceVpcEndpointAwsService("events");static EVENTBRIDGE_SCHEMA_REGISTRY=new InterfaceVpcEndpointAwsService("schemas");static FAULT_INJECTION_SIMULATOR=new InterfaceVpcEndpointAwsService("fis");static FINSPACE=new InterfaceVpcEndpointAwsService("finspace");static FINSPACE_API=new InterfaceVpcEndpointAwsService("finspace-api");static FORECAST=new InterfaceVpcEndpointAwsService("forecast");static FORECAST_QUERY=new InterfaceVpcEndpointAwsService("forecastquery");static FORECAST_FIPS=new InterfaceVpcEndpointAwsService("forecast-fips");static FORECAST_QUERY_FIPS=new InterfaceVpcEndpointAwsService("forecastquery-fips");static FRAUD_DETECTOR=new InterfaceVpcEndpointAwsService("frauddetector");static FSX=new InterfaceVpcEndpointAwsService("fsx");static FSX_FIPS=new InterfaceVpcEndpointAwsService("fsx-fips");static CODECOMMIT_GIT=new InterfaceVpcEndpointAwsService("git-codecommit");static CODECOMMIT_GIT_FIPS=new InterfaceVpcEndpointAwsService("git-codecommit-fips");static GLUE=new InterfaceVpcEndpointAwsService("glue");static GLUE_DATABREW=new InterfaceVpcEndpointAwsService("databrew");static GLUE_DASHBOARD=new InterfaceVpcEndpointAwsService("glue.dashboard");static GRAFANA=new InterfaceVpcEndpointAwsService("grafana");static GRAFANA_WORKSPACE=new InterfaceVpcEndpointAwsService("grafana-workspace");static GROUNDSTATION=new InterfaceVpcEndpointAwsService("groundstation");static GUARDDUTY=new InterfaceVpcEndpointAwsService("guardduty");static GUARDDUTY_FIPS=new InterfaceVpcEndpointAwsService("guardduty-fips");static GUARDDUTY_DATA=new InterfaceVpcEndpointAwsService("guardduty-data");static GUARDDUTY_DATA_FIPS=new InterfaceVpcEndpointAwsService("guardduty-data-fips");static HEALTH_IMAGING=new InterfaceVpcEndpointAwsService("medical-imaging");static HEALTH_IMAGING_RUNTIME=new InterfaceVpcEndpointAwsService("runtime-medical-imaging");static HEALTH_IMAGING_DICOM=new InterfaceVpcEndpointAwsService("dicom-medical-imaging");static HEALTHLAKE=new InterfaceVpcEndpointAwsService("healthlake");static IAM=new InterfaceVpcEndpointAwsService("iam","com.amazonaws",void 0,{global:!0});static IAM_IDENTITY_CENTER=new InterfaceVpcEndpointAwsService("identitystore");static IAM_ROLES_ANYWHERE=new InterfaceVpcEndpointAwsService("rolesanywhere");static IMAGE_BUILDER=new InterfaceVpcEndpointAwsService("imagebuilder");static INSPECTOR=new InterfaceVpcEndpointAwsService("inspector2");static INSPECTOR_SCAN=new InterfaceVpcEndpointAwsService("inspector-scan");static INTERNET_MONITOR=new InterfaceVpcEndpointAwsService("internetmonitor");static INTERNET_MONITOR_FIPS=new InterfaceVpcEndpointAwsService("internetmonitor-fips");static INVOICING=new InterfaceVpcEndpointAwsService("invoicing");static IOT_CORE=new InterfaceVpcEndpointAwsService("iot.data");static IOT_CORE_CREDENTIALS=new InterfaceVpcEndpointAwsService("iot.credentials");static IOT_CORE_DEVICE_ADVISOR=new InterfaceVpcEndpointAwsService("deviceadvisor.iot");static IOT_CORE_FLEETHUB_API=new InterfaceVpcEndpointAwsService("iot.fleethub.api");static IOT_CORE_FOR_LORAWAN=new InterfaceVpcEndpointAwsService("iotwireless.api");static IOT_FLEETWISE=new InterfaceVpcEndpointAwsService("iotfleetwise");static IOT_LORAWAN_CUPS=new InterfaceVpcEndpointAwsService("lorawan.cups");static IOT_LORAWAN_LNS=new InterfaceVpcEndpointAwsService("lorawan.lns");static IOT_GREENGRASS=new InterfaceVpcEndpointAwsService("greengrass");static IOT_ROBORUNNER=new InterfaceVpcEndpointAwsService("iotroborunner");static IOT_SITEWISE_API=new InterfaceVpcEndpointAwsService("iotsitewise.api");static IOT_SITEWISE_DATA=new InterfaceVpcEndpointAwsService("iotsitewise.data");static IOT_TWINMAKER_API=new InterfaceVpcEndpointAwsService("iottwinmaker.api");static IOT_TWINMAKER_DATA=new InterfaceVpcEndpointAwsService("iottwinmaker.data");static KAFKA=new InterfaceVpcEndpointAwsService("kafka");static KAFKA_CONNECT=new InterfaceVpcEndpointAwsService("kafkaconnect");static KAFKA_FIPS=new InterfaceVpcEndpointAwsService("kafka-fips");static KENDRA=new InterfaceVpcEndpointAwsService("kendra");static KENDRA_RANKING=new InterfaceVpcEndpointAwsService("kendra-ranking","aws.api");static KEYSPACES=new InterfaceVpcEndpointAwsService("cassandra","",9142);static KEYSPACES_FIPS=new InterfaceVpcEndpointAwsService("cassandra-fips","",9142);static KINESIS_STREAMS=new InterfaceVpcEndpointAwsService("kinesis-streams");static KINESIS_STREAMS_FIPS=new InterfaceVpcEndpointAwsService("kinesis-streams-fips");static KINESIS_FIREHOSE=new InterfaceVpcEndpointAwsService("kinesis-firehose");static KMS=new InterfaceVpcEndpointAwsService("kms");static KMS_FIPS=new InterfaceVpcEndpointAwsService("kms-fips");static LAKE_FORMATION=new InterfaceVpcEndpointAwsService("lakeformation");static LAUNCH_WIZARD=new InterfaceVpcEndpointAwsService("launchwizard");static LAMBDA=new InterfaceVpcEndpointAwsService("lambda");static LEX_MODELS=new InterfaceVpcEndpointAwsService("models-v2-lex");static LEX_RUNTIME=new InterfaceVpcEndpointAwsService("runtime-v2-lex");static LICENSE_MANAGER=new InterfaceVpcEndpointAwsService("license-manager");static LICENSE_MANAGER_FIPS=new InterfaceVpcEndpointAwsService("license-manager-fips");static LICENSE_MANAGER_LINUX_SUBSCRIPTIONS=new InterfaceVpcEndpointAwsService("license-manager-linux-subscriptions");static LICENSE_MANAGER_LINUX_SUBSCRIPTIONS_FIPS=new InterfaceVpcEndpointAwsService("license-manager-linux-subscriptions-fips");static LICENSE_MANAGER_USER_SUBSCRIPTIONS=new InterfaceVpcEndpointAwsService("license-manager-user-subscriptions");static LOCATION_SERVICE_GEOFENCING=new InterfaceVpcEndpointAwsService("geo.geofencing");static LOCATION_SERVICE_MAPS=new InterfaceVpcEndpointAwsService("geo.maps");static LOCATION_SERVICE_METADATA=new InterfaceVpcEndpointAwsService("geo.metadata");static LOCATION_SERVICE_PLACES=new InterfaceVpcEndpointAwsService("geo.places");static LOCATION_SERVICE_ROUTE=new InterfaceVpcEndpointAwsService("geo.routes");static LOCATION_SERVICE_TRACKING=new InterfaceVpcEndpointAwsService("geo.tracking");static LOOKOUT_EQUIPMENT=new InterfaceVpcEndpointAwsService("lookoutequipment");static LOOKOUT_METRICS=new InterfaceVpcEndpointAwsService("lookoutmetrics");static LOOKOUT_VISION=new InterfaceVpcEndpointAwsService("lookoutvision");static MAILMANAGER=new InterfaceVpcEndpointAwsService("mail-manager");static MAILMANAGER_FIPS=new InterfaceVpcEndpointAwsService("mail-manager-fips");static MAINFRAME_MODERNIZATION=new InterfaceVpcEndpointAwsService("m2");static MAINFRAME_MODERNIZATION_APP_TEST=new InterfaceVpcEndpointAwsService("apptest");static MACIE=new InterfaceVpcEndpointAwsService("macie2");static MANAGEMENT_CONSOLE=new InterfaceVpcEndpointAwsService("console");static MANAGEMENT_CONSOLE_SIGNIN=new InterfaceVpcEndpointAwsService("signin");static MANAGED_BLOCKCHAIN_QUERY=new InterfaceVpcEndpointAwsService("managedblockchain-query");static MANAGED_BLOCKCHAIN_BITCOIN_MAINNET=new InterfaceVpcEndpointAwsService("managedblockchain.bitcoin.mainnet");static MANAGED_BLOCKCHAIN_BITCOIN_TESTNET=new InterfaceVpcEndpointAwsService("managedblockchain.bitcoin.testnet");static MEMORY_DB=new InterfaceVpcEndpointAwsService("memory-db");static MEMORY_DB_FIPS=new InterfaceVpcEndpointAwsService("memorydb-fips");static MIGRATIONHUB_ORCHESTRATOR=new InterfaceVpcEndpointAwsService("migrationhub-orchestrator");static MIGRATIONHUB_REFACTOR_SPACES=new InterfaceVpcEndpointAwsService("refactor-spaces");static MIGRATIONHUB_STRATEGY=new InterfaceVpcEndpointAwsService("migrationhub-strategy");static MQ=new InterfaceVpcEndpointAwsService("mq");static NEPTUNE_ANALYTICS=new InterfaceVpcEndpointAwsService("neptune-graph");static NEPTUNE_ANALYTICS_DATA=new InterfaceVpcEndpointAwsService("neptune-graph-data");static NEPTUNE_ANALYTICS_FIPS=new InterfaceVpcEndpointAwsService("neptune-graph-fips");static NETWORK_FIREWALL=new InterfaceVpcEndpointAwsService("network-firewall");static NETWORK_FIREWALL_FIPS=new InterfaceVpcEndpointAwsService("network-firewall-fips");static NETWORK_FLOW_MONITOR=new InterfaceVpcEndpointAwsService("networkflowmonitor");static NETWORK_FLOW_MONITOR_REPORTS=new InterfaceVpcEndpointAwsService("networkflowmonitorreports");static NIMBLE_STUDIO=new InterfaceVpcEndpointAwsService("nimble");static OBSERVABILITY_ADMIN=new InterfaceVpcEndpointAwsService("observabilityadmin");static OUTPOSTS=new InterfaceVpcEndpointAwsService("outposts");static ORGANIZATIONS=new InterfaceVpcEndpointAwsService("organizations");static ORGANIZATIONS_FIPS=new InterfaceVpcEndpointAwsService("organizations-fips");static OMICS_ANALYTICS=new InterfaceVpcEndpointAwsService("analytics-omics");static OMICS_CONTROL_STORAGE=new InterfaceVpcEndpointAwsService("control-storage-omics");static OMICS_STORAGE=new InterfaceVpcEndpointAwsService("storage-omics");static OMICS_TAGS=new InterfaceVpcEndpointAwsService("tags-omics");static OMICS_WORKFLOWS=new InterfaceVpcEndpointAwsService("workflows-omics");static PANORAMA=new InterfaceVpcEndpointAwsService("panorama");static PARALLEL_COMPUTING_SERVICE=new InterfaceVpcEndpointAwsService("pcs");static PARALLEL_COMPUTING_SERVICE_FIPS=new InterfaceVpcEndpointAwsService("pcs-fips");static PAYMENT_CRYPTOGRAPHY_CONTROLPLANE=new InterfaceVpcEndpointAwsService("payment-cryptography.controlplane");static PAYMENT_CRYTOGRAPHY_DATAPLANE=new InterfaceVpcEndpointAwsService("payment-cryptography.dataplane");static PAYMENT_CRYPTOGRAPHY_DATAPLANE=new InterfaceVpcEndpointAwsService("payment-cryptography.dataplane");static PERSONALIZE=new InterfaceVpcEndpointAwsService("personalize");static PERSONALIZE_EVENTS=new InterfaceVpcEndpointAwsService("personalize-events");static PERSONALIZE_RUNTIME=new InterfaceVpcEndpointAwsService("personalize-runtime");static PINPOINT_V1=new InterfaceVpcEndpointAwsService("pinpoint");static PINPOINT=new InterfaceVpcEndpointAwsService("pinpoint-sms-voice-v2");static PINPOINT_SMS_VOICE_V2=new InterfaceVpcEndpointAwsService("pinpoint-sms-voice-v2");static PIPES=new InterfaceVpcEndpointAwsService("pipes");static PIPES_DATA=new InterfaceVpcEndpointAwsService("pipes-data");static PIPES_FIPS=new InterfaceVpcEndpointAwsService("pipes-fips");static PRICE_LIST=new InterfaceVpcEndpointAwsService("pricing.api");static PRICING_CALCULATOR=new InterfaceVpcEndpointAwsService("bcm-pricing-calculator");static POLLY=new InterfaceVpcEndpointAwsService("polly");static PRIVATE_5G=new InterfaceVpcEndpointAwsService("private-networks");static PRIVATE_CERTIFICATE_AUTHORITY=new InterfaceVpcEndpointAwsService("acm-pca");static PRIVATE_CERTIFICATE_AUTHORITY_CONNECTOR_AD=new InterfaceVpcEndpointAwsService("pca-connector-ad");static PRIVATE_CERTIFICATE_AUTHORITY_CONNECTOR_SCEP=new InterfaceVpcEndpointAwsService("pca-connector-scep");static PROMETHEUS=new InterfaceVpcEndpointAwsService("aps");static PROMETHEUS_WORKSPACES=new InterfaceVpcEndpointAwsService("aps-workspaces");static PROTON=new InterfaceVpcEndpointAwsService("proton");static Q_BUSSINESS=new InterfaceVpcEndpointAwsService("qbusiness","aws.api");static Q_DEVELOPER=new InterfaceVpcEndpointAwsService("q");static Q_DEVELOPER_CODE_WHISPERER=new InterfaceVpcEndpointAwsService("codewhisperer");static Q_DEVELOPER_QAPPS=new InterfaceVpcEndpointAwsService("qapps");static Q_USER_SUBSCRIPTIONS=new InterfaceVpcEndpointAwsService("service.user-subscriptions");static QLDB=new InterfaceVpcEndpointAwsService("qldb.session");static QUICKSIGHT_WEBSITE=new InterfaceVpcEndpointAwsService("quicksight-website");static RDS=new InterfaceVpcEndpointAwsService("rds");static RDS_DATA=new InterfaceVpcEndpointAwsService("rds-data");static RDS_PERFORMANCE_INSIGHTS=new InterfaceVpcEndpointAwsService("pi");static RDS_PERFORMANCE_INSIGHTS_FIPS=new InterfaceVpcEndpointAwsService("pi-fips");static REDSHIFT=new InterfaceVpcEndpointAwsService("redshift");static REDSHIFT_FIPS=new InterfaceVpcEndpointAwsService("redshift-fips");static REDSHIFT_DATA=new InterfaceVpcEndpointAwsService("redshift-data");static REDSHIFT_DATA_FIPS=new InterfaceVpcEndpointAwsService("redshift-data-fips");static REDSHIFT_SERVERLESS=new InterfaceVpcEndpointAwsService("redshift-serverless");static REDSHIFT_SERVERLESS_FIPS=new InterfaceVpcEndpointAwsService("redshift-serverless-fips");static REKOGNITION=new InterfaceVpcEndpointAwsService("rekognition");static REKOGNITION_FIPS=new InterfaceVpcEndpointAwsService("rekognition-fips");static REKOGNITION_STREAMING=new InterfaceVpcEndpointAwsService("streaming-rekognition");static REKOGNITION_STREAMING_FIPS=new InterfaceVpcEndpointAwsService("streaming-rekognition-fips");static REPOST_SPACE=new InterfaceVpcEndpointAwsService("repostspace");static RESOURCE_ACCESS_MANAGER=new InterfaceVpcEndpointAwsService("ram");static RESOURCE_GROUPS=new InterfaceVpcEndpointAwsService("resource-groups");static RESOURCE_GROUPS_FIPS=new InterfaceVpcEndpointAwsService("resource-groups-fips");static ROBOMAKER=new InterfaceVpcEndpointAwsService("robomaker");static RECYCLE_BIN=new InterfaceVpcEndpointAwsService("rbin");static S3=new InterfaceVpcEndpointAwsService("s3");static S3_OUTPOSTS=new InterfaceVpcEndpointAwsService("s3-outposts");static S3_MULTI_REGION_ACCESS_POINTS=new InterfaceVpcEndpointAwsService("s3-global.accesspoint","com.amazonaws",void 0,{global:!0});static S3_TABLES=new InterfaceVpcEndpointAwsService("s3tables");static SAVINGS_PLANS=new InterfaceVpcEndpointAwsService("savingsplans","com.amazonaws",void 0,{global:!0});static SAGEMAKER_API=new InterfaceVpcEndpointAwsService("sagemaker.api");static SAGEMAKER_API_FIPS=new InterfaceVpcEndpointAwsService("sagemaker.api-fips");static SAGEMAKER_DATA_SCIENCE_ASSISTANT=new InterfaceVpcEndpointAwsService("sagemaker-data-science-assistant");static SAGEMAKER_EXPERIMENTS=new InterfaceVpcEndpointAwsService("experiments","aws.sagemaker");static SAGEMAKER_FEATURESTORE_RUNTIME=new InterfaceVpcEndpointAwsService("sagemaker.featurestore-runtime");static SAGEMAKER_GEOSPATIAL=new InterfaceVpcEndpointAwsService("sagemaker-geospatial");static SAGEMAKER_METRICS=new InterfaceVpcEndpointAwsService("sagemaker.metrics");static SAGEMAKER_NOTEBOOK=new InterfaceVpcEndpointAwsService("notebook","aws.sagemaker");static SAGEMAKER_PARTNER_APP=new InterfaceVpcEndpointAwsService("partner-app","aws.sagemaker");static SAGEMAKER_RUNTIME=new InterfaceVpcEndpointAwsService("sagemaker.runtime");static SAGEMAKER_RUNTIME_FIPS=new InterfaceVpcEndpointAwsService("sagemaker.runtime-fips");static SAGEMAKER_STUDIO=new InterfaceVpcEndpointAwsService("studio","aws.sagemaker");static SECRETS_MANAGER=new InterfaceVpcEndpointAwsService("secretsmanager");static SECURITYHUB=new InterfaceVpcEndpointAwsService("securityhub");static SECURITYLAKE=new InterfaceVpcEndpointAwsService("securitylake");static SECURITYLAKE_FIPS=new InterfaceVpcEndpointAwsService("securitylake-fips");static SERVICE_CATALOG=new InterfaceVpcEndpointAwsService("servicecatalog");static SERVICE_CATALOG_APPREGISTRY=new InterfaceVpcEndpointAwsService("servicecatalog-appregistry");static SERVER_MIGRATION_SERVICE=new InterfaceVpcEndpointAwsService("sms");static SERVER_MIGRATION_SERVICE_FIPS=new InterfaceVpcEndpointAwsService("sms-fips");static SERVER_MIGRATION_SERVICE_AWSCONNECTOR=new InterfaceVpcEndpointAwsService("awsconnector");static SERVERLESS_APPLICATION_REPOSITORY=new InterfaceVpcEndpointAwsService("serverlessrepo");static SES=new InterfaceVpcEndpointAwsService("email-smtp");static SHIELD=new InterfaceVpcEndpointAwsService("shield");static SHIELD_FIPS=new InterfaceVpcEndpointAwsService("shield-fips");static SIMSPACE_WEAVER=new InterfaceVpcEndpointAwsService("simspaceweaver");static SNOW_DEVICE_MANAGEMENT=new InterfaceVpcEndpointAwsService("snow-device-management");static SNS=new InterfaceVpcEndpointAwsService("sns");static SQS=new InterfaceVpcEndpointAwsService("sqs");static SQS_FIPS=new InterfaceVpcEndpointAwsService("sqs-fips");static SSM=new InterfaceVpcEndpointAwsService("ssm");static SSM_FIPS=new InterfaceVpcEndpointAwsService("ssm-fips");static SSM_MESSAGES=new InterfaceVpcEndpointAwsService("ssmmessages");static SSM_CONTACTS=new InterfaceVpcEndpointAwsService("ssm-contacts");static SSM_INCIDENTS=new InterfaceVpcEndpointAwsService("ssm-incidents");static SSM_QUICK_SETUP=new InterfaceVpcEndpointAwsService("ssm-quicksetup");static STEP_FUNCTIONS=new InterfaceVpcEndpointAwsService("states");static STEP_FUNCTIONS_SYNC=new InterfaceVpcEndpointAwsService("sync-states");static STORAGE_GATEWAY=new InterfaceVpcEndpointAwsService("storagegateway");static STS=new InterfaceVpcEndpointAwsService("sts");static STS_FIPS=new InterfaceVpcEndpointAwsService("sts-fips");static SUPPLY_CHAIN=new InterfaceVpcEndpointAwsService("scn");static SWF=new InterfaceVpcEndpointAwsService("swf");static SWF_FIPS=new InterfaceVpcEndpointAwsService("swf-fips");static TAGGING=new InterfaceVpcEndpointAwsService("tagging");static TELCO_NETWORK_BUILDER=new InterfaceVpcEndpointAwsService("tnb");static TEXTRACT=new InterfaceVpcEndpointAwsService("textract");static TEXTRACT_FIPS=new InterfaceVpcEndpointAwsService("textract-fips");static TIMESTREAM_INFLUXDB=new InterfaceVpcEndpointAwsService("timestream-influxdb");static TIMESTREAM_INFLUXDB_FIPS=new InterfaceVpcEndpointAwsService("timestream-influxdb-fips");static TRANSCRIBE=new InterfaceVpcEndpointAwsService("transcribe");static TRANSCRIBE_STREAMING=new InterfaceVpcEndpointAwsService("transcribestreaming");static TRANSFER=new InterfaceVpcEndpointAwsService("transfer");static TRANSFER_SERVER=new InterfaceVpcEndpointAwsService("transfer.server");static TRANSLATE=new InterfaceVpcEndpointAwsService("translate");static TRUSTED_ADVISOR=new InterfaceVpcEndpointAwsService("trustedadvisor");static WAFV2=new InterfaceVpcEndpointAwsService("wafv2");static WAFV2_FIPS=new InterfaceVpcEndpointAwsService("wafv2-fips");static WELL_ARCHITECTED_TOOL=new InterfaceVpcEndpointAwsService("wellarchitected");static WORKMAIL=new InterfaceVpcEndpointAwsService("workmail");static WORKSPACES=new InterfaceVpcEndpointAwsService("workspaces");static WORKSPACES_THIN_CLIENT=new InterfaceVpcEndpointAwsService("thinclient.api");static WORKSPACES_WEB=new InterfaceVpcEndpointAwsService("workspaces-web");static WORKSPACES_WEB_FIPS=new InterfaceVpcEndpointAwsService("workspaces-web-fips");static XRAY=new InterfaceVpcEndpointAwsService("xray");static VERIFIED_PERMISSIONS=new InterfaceVpcEndpointAwsService("verifiedpermissions");static VPC_LATTICE=new InterfaceVpcEndpointAwsService("vpc-lattice");name;shortName;port;privateDnsDefault=!0;constructor(name,prefix,port,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAwsServiceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,InterfaceVpcEndpointAwsService),error}const regionPrefix=props?.global?"":core_1().Lazy.uncachedString({produce:context=>core_1().Stack.of(context.scope).region})+".",defaultEndpointPrefix=core_1().Lazy.uncachedString({produce:context=>{const regionName=core_1().Stack.of(context.scope).region;return this.getDefaultEndpointPrefix(name,regionName)}}),defaultEndpointSuffix=core_1().Lazy.uncachedString({produce:context=>{const regionName=core_1().Stack.of(context.scope).region;return this.getDefaultEndpointSuffix(name,regionName)}});this.name=`${prefix||defaultEndpointPrefix}.${regionPrefix}${name}${defaultEndpointSuffix}`,this.shortName=name,this.port=port||443}getDefaultEndpointPrefix(name,region){return{"cn-north-1":["application-autoscaling","appmesh-envoy-management","athena","autoscaling","awsconnector","backup","batch","cassandra","cloudcontrolapi","cloudformation","codedeploy-commands-secure","databrew","dms","ebs","ec2","ecr.api","ecr.dkr","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticfilesystem-fips","emr-containers","execute-api","fsx","imagebuilder","iot.data","iotsitewise.api","iotsitewise.data","kinesis-streams","lambda","license-manager","monitoring","rds","redshift","redshift-data","s3","sagemaker.api","sagemaker.featurestore-runtime","sagemaker.runtime","securityhub","servicecatalog","sms","sqs","states","sts","sync-states","synthetics","transcribe","transcribestreaming","transfer","xray"],"cn-northwest-1":["account","application-autoscaling","appmesh-envoy-management","athena","autoscaling","awsconnector","backup","batch","cassandra","cloudcontrolapi","cloudformation","codedeploy-commands-secure","databrew","dms","ebs","ec2","ecr.api","ecr.dkr","eks","elasticache","elasticbeanstalk","elasticfilesystem","elasticfilesystem-fips","emr-containers","execute-api","fsx","imagebuilder","iot.data","kinesis-streams","lambda","license-manager","monitoring","polly","rds","redshift","redshift-data","s3","sagemaker.api","sagemaker.featurestore-runtime","sagemaker.runtime","securityhub","servicecatalog","sms","sqs","states","sts","sync-states","synthetics","transcribe","transcribestreaming","transfer","workspaces","xray"]}[region]?.includes(name)?"cn.com.amazonaws":"com.amazonaws"}getDefaultEndpointSuffix(name,region){return{"cn-north-1":["transcribe"],"cn-northwest-1":["transcribe"]}[region]?.includes(name)?".cn":""}}exports.InterfaceVpcEndpointAwsService=InterfaceVpcEndpointAwsService;let InterfaceVpcEndpoint=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=VpcEndpoint;var InterfaceVpcEndpoint2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),InterfaceVpcEndpoint2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ec2.InterfaceVpcEndpoint";static fromInterfaceVpcEndpointAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromInterfaceVpcEndpointAttributes),error}const securityGroups=attrs.securityGroupId?[security_group_1().SecurityGroup.fromSecurityGroupId(scope,"SecurityGroup",attrs.securityGroupId)]:attrs.securityGroups;class Import extends core_1().Resource{vpcEndpointId=attrs.vpcEndpointId;connections=new(connections_1()).Connections({defaultPort:port_1().Port.tcp(attrs.port),securityGroups});get vpcEndpointRef(){return{vpcEndpointId:this.vpcEndpointId}}}return new Import(scope,id)}vpcEndpointId;vpcEndpointCreationTimestamp;vpcEndpointDnsEntries;vpcEndpointNetworkInterfaceIds;securityGroupId;connections;constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_InterfaceVpcEndpointProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,InterfaceVpcEndpoint2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const securityGroups=props.securityGroups||[new(security_group_1()).SecurityGroup(this,"SecurityGroup",{vpc:props.vpc})];this.securityGroupId=securityGroups[0].securityGroupId,this.connections=new(connections_1()).Connections({defaultPort:port_1().Port.tcp(props.service.port),securityGroups}),props.open!==!1&&this.connections.allowDefaultPortFrom(peer_1().Peer.ipv4(props.vpc.vpcCidrBlock));const subnetIds=this.endpointSubnets(props),dnsOptions=props.dnsRecordIpType===void 0&&props.privateDnsOnlyForInboundResolverEndpoint===void 0?void 0:{dnsRecordIpType:props.dnsRecordIpType,privateDnsOnlyForInboundResolverEndpoint:props.privateDnsOnlyForInboundResolverEndpoint},endpoint=new(ec2_generated_1()).CfnVPCEndpoint(this,"Resource",{privateDnsEnabled:props.privateDnsEnabled??props.service.privateDnsDefault??!0,policyDocument:core_1().Lazy.any({produce:()=>this.policyDocument}),securityGroupIds:securityGroups.map(s=>s.securityGroupId),serviceName:props.service.name,vpcEndpointType:VpcEndpointType.INTERFACE,subnetIds,vpcId:props.vpc.vpcId,ipAddressType:props.ipAddressType,dnsOptions,...props.serviceRegion&&{serviceRegion:props.serviceRegion}});this.vpcEndpointId=endpoint.ref,this.vpcEndpointCreationTimestamp=endpoint.attrCreationTimestamp,this.vpcEndpointDnsEntries=endpoint.attrDnsEntries,this.vpcEndpointNetworkInterfaceIds=endpoint.attrNetworkInterfaceIds}endpointSubnets(props){const lookupSupportedAzs=props.lookupSupportedAzs??!1,subnetSelection=props.vpc.selectSubnets({...props.subnets,onePerAz:!0}),subnets=subnetSelection.subnets;if(!subnetSelection.isPendingLookup&&subnetSelection.subnets.length==0)throw new(core_1()).ValidationError("Cannot create a VPC Endpoint with no subnets",this);if(!lookupSupportedAzs)return subnetSelection.subnetIds;const lookupServiceName=core_1().Token.isUnresolved(props.service.name)&&props.service instanceof InterfaceVpcEndpointAwsService?core_1().Stack.of(this).resolve(props.service.name):props.service.name;this.validateCanLookupSupportedAzs(subnets,lookupServiceName);const availableAZs=this.availableAvailabilityZones(lookupServiceName),filteredSubnets=subnets.filter(s=>availableAZs.includes(s.availabilityZone));if(filteredSubnets.length==0)throw new(core_1()).ValidationError(`lookupSupportedAzs returned ${availableAZs} but subnets have AZs ${subnets.map(s=>s.availabilityZone)}`,this);return filteredSubnets.map(s=>s.subnetId)}validateCanLookupSupportedAzs(subnets,serviceName){const agnosticAcct=core_1().Token.isUnresolved(this.env.account),agnosticRegion=core_1().Token.isUnresolved(this.env.region),agnosticService=core_1().Token.isUnresolved(serviceName),agnosticSubnets=subnets.some(s=>core_1().Token.isUnresolved(s.availabilityZone)),agnosticSubnetList=core_1().Token.isUnresolved(subnets.map(s=>s.availabilityZone));if(agnosticAcct||agnosticRegion)throw new(core_1()).ValidationError("Cannot look up VPC endpoint availability zones if account/region are not specified",this);if(agnosticService)throw new(core_1()).ValidationError(`Cannot lookup AZs for a service name with a Token: ${serviceName}`,this);if(agnosticSubnets||agnosticSubnetList){const agnostic=subnets.filter(s=>core_1().Token.isUnresolved(s.availabilityZone));throw new(core_1()).ValidationError(`lookupSupportedAzs cannot filter on subnets with Token AZs: ${agnostic}`,this)}}availableAvailabilityZones(serviceName){const availableAZs=core_1().ContextProvider.getValue(this,{provider:cxschema().ContextProvider.ENDPOINT_SERVICE_AVAILABILITY_ZONE_PROVIDER,dummyValue:this.stack.availabilityZones,props:{serviceName}}).value;if(!Array.isArray(availableAZs))throw new(core_1()).ValidationError(`Discovered AZs for endpoint service ${serviceName} must be an array`,this);return availableAZs}static{__runInitializers(_classThis,_classExtraInitializers)}};return InterfaceVpcEndpoint2=_classThis})();exports.InterfaceVpcEndpoint=InterfaceVpcEndpoint;
