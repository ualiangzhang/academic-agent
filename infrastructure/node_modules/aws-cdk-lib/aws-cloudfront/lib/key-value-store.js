"use strict";var __esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0},__runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.KeyValueStore=exports.InlineImportSource=exports.AssetImportSource=exports.S3ImportSource=exports.ImportSource=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var fs=()=>{var tmp=require("fs");return fs=()=>tmp,tmp},path_1=()=>{var tmp=require("path");return path_1=()=>tmp,tmp},cloudfront_generated_1=()=>{var tmp=require("./cloudfront.generated");return cloudfront_generated_1=()=>tmp,tmp},s3_assets=()=>{var tmp=require("../../aws-s3-assets");return s3_assets=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};class ImportSource{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.ImportSource",version:"2.220.0"};static fromBucket(bucket,key){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3_IBucket(bucket)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromBucket),error}return new S3ImportSource(bucket,key)}static fromAsset(path,options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3_assets_AssetOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromAsset),error}return new AssetImportSource(path,options)}static fromInline(data){return new InlineImportSource(data)}}exports.ImportSource=ImportSource;class S3ImportSource extends ImportSource{bucket;key;static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.S3ImportSource",version:"2.220.0"};constructor(bucket,key){super(),this.bucket=bucket,this.key=key;try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3_IBucket(bucket)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,S3ImportSource),error}}_bind(_scope){return{sourceType:"S3",sourceArn:`${this.bucket.arnForObjects(this.key)}`}}}exports.S3ImportSource=S3ImportSource;class AssetImportSource extends ImportSource{path;options;static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.AssetImportSource",version:"2.220.0"};asset;constructor(path,options={}){super(),this.path=path,this.options=options;try{jsiiDeprecationWarnings().aws_cdk_lib_aws_s3_assets_AssetOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,AssetImportSource),error}}_bind(scope){if(!this.asset)this.asset=new(s3_assets()).Asset(scope,"ImportSource",{path:this.path,deployTime:!0,...this.options});else if(core_1().Stack.of(this.asset)!==core_1().Stack.of(scope))throw new(core_1()).ValidationError(`Asset is already associated with another stack '${core_1().Stack.of(this.asset).stackName}. Create a new ImportSource instance for every stack.`,scope);return{sourceType:"S3",sourceArn:this.asset.bucket.arnForObjects(this.asset.s3ObjectKey)}}}exports.AssetImportSource=AssetImportSource;class InlineImportSource extends ImportSource{data;static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.InlineImportSource",version:"2.220.0"};asset;constructor(data){super(),this.data=data}_bind(scope){if(this.asset){if(core_1().Stack.of(this.asset)!==core_1().Stack.of(scope))throw new(core_1()).ValidationError(`Asset is already associated with another stack '${core_1().Stack.of(this.asset).stackName}. Create a new ImportSource instance for every stack.`,scope)}else{const workdir=core_1().FileSystem.mkdtemp("key-value-store"),outputPath=(0,path_1().join)(workdir,"data.json");fs().writeFileSync(outputPath,this.data),this.asset=new(s3_assets()).Asset(scope,"ImportSource",{path:outputPath,deployTime:!0})}return{sourceType:"S3",sourceArn:this.asset.bucket.arnForObjects(this.asset.s3ObjectKey)}}}exports.InlineImportSource=InlineImportSource;let KeyValueStore=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=core_1().Resource;var KeyValueStore2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),KeyValueStore2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.KeyValueStore",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-cloudfront.KeyValueStore";static fromKeyValueStoreArn(scope,id,keyValueStoreArn){const storeId=core_1().Arn.split(keyValueStoreArn,core_1().ArnFormat.SLASH_RESOURCE_NAME).resourceName;if(!storeId)throw new(core_1()).ValidationError(`Invalid Key Value Store Arn: '${keyValueStoreArn}'`,scope);return new class extends core_1().Resource{keyValueStoreArn=keyValueStoreArn;keyValueStoreId=storeId;keyValueStoreRef={keyValueStoreArn,keyValueStoreName:storeId};constructor(){super(scope,id,{environmentFromArn:keyValueStoreArn})}get keyValueStoreStatus(){throw new(core_1()).ValidationError("Status is not available for imported Key Value Store",scope)}}}keyValueStoreArn;keyValueStoreId;keyValueStoreStatus;keyValueStoreRef;constructor(scope,id,props){super(scope,id,{physicalName:props?.keyValueStoreName??core_1().Lazy.string({produce:()=>core_1().Names.uniqueResourceName(this,{maxLength:64})})});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudfront_KeyValueStoreProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,KeyValueStore2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const resource=new(cloudfront_generated_1()).CfnKeyValueStore(this,"Resource",{name:this.physicalName,comment:props?.comment,importSource:props?.source?._bind(this)});this.keyValueStoreRef=resource.keyValueStoreRef,this.keyValueStoreArn=resource.attrArn,this.keyValueStoreId=resource.attrId,this.keyValueStoreStatus=resource.attrStatus}static{__runInitializers(_classThis,_classExtraInitializers)}};return KeyValueStore2=_classThis})();exports.KeyValueStore=KeyValueStore;
