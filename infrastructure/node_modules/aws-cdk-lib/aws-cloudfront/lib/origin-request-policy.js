"use strict";var __esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0},__runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OriginRequestQueryStringBehavior=exports.OriginRequestHeaderBehavior=exports.OriginRequestCookieBehavior=exports.OriginRequestPolicy=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cloudfront_generated_1=()=>{var tmp=require("./cloudfront.generated");return cloudfront_generated_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};let OriginRequestPolicy=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=core_1().Resource;var OriginRequestPolicy2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),OriginRequestPolicy2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.OriginRequestPolicy",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-cloudfront.OriginRequestPolicy";static USER_AGENT_REFERER_HEADERS=OriginRequestPolicy2.fromManagedOriginRequestPolicy("acba4595-bd28-49b8-b9fe-13317c0390fa");static CORS_CUSTOM_ORIGIN=OriginRequestPolicy2.fromManagedOriginRequestPolicy("59781a5b-3903-41f3-afcb-af62929ccde1");static CORS_S3_ORIGIN=OriginRequestPolicy2.fromManagedOriginRequestPolicy("88a5eaf4-2fd4-4709-b370-b4c650ea3fcf");static ALL_VIEWER=OriginRequestPolicy2.fromManagedOriginRequestPolicy("216adef6-5c7f-47e4-b989-5492eafa07d3");static ELEMENTAL_MEDIA_TAILOR=OriginRequestPolicy2.fromManagedOriginRequestPolicy("775133bc-15f2-49f9-abea-afb2e0bf67d2");static ALL_VIEWER_AND_CLOUDFRONT_2022=OriginRequestPolicy2.fromManagedOriginRequestPolicy("33f36d7e-f396-46d9-90e0-52428a34d9dc");static ALL_VIEWER_EXCEPT_HOST_HEADER=OriginRequestPolicy2.fromManagedOriginRequestPolicy("b689b0a8-53d0-40ab-baf2-68738e2966ac");static fromOriginRequestPolicyId(scope,id,originRequestPolicyId){return new class extends core_1().Resource{originRequestPolicyId=originRequestPolicyId;originRequestPolicyRef={originRequestPolicyId}}(scope,id)}static fromManagedOriginRequestPolicy(managedOriginRequestPolicyId){return new class{get node(){throw new(core_1()).UnscopedValidationError("The result of fromManagedOriginRequestPolicy can not be used in this API")}originRequestPolicyId=managedOriginRequestPolicyId;originRequestPolicyRef={originRequestPolicyId:managedOriginRequestPolicyId}}}originRequestPolicyId;originRequestPolicyRef;constructor(scope,id,props={}){super(scope,id,{physicalName:props.originRequestPolicyName});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudfront_OriginRequestPolicyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,OriginRequestPolicy2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const originRequestPolicyName=props.originRequestPolicyName??core_1().Names.uniqueId(this);if(!core_1().Token.isUnresolved(originRequestPolicyName)&&!originRequestPolicyName.match(/^[\w-]+$/i))throw new(core_1()).ValidationError(`'originRequestPolicyName' can only include '-', '_', and alphanumeric characters, got: '${props.originRequestPolicyName}'`,this);const cookies=props.cookieBehavior??OriginRequestCookieBehavior.none(),headers=props.headerBehavior??OriginRequestHeaderBehavior.none(),queryStrings=props.queryStringBehavior??OriginRequestQueryStringBehavior.none(),resource=new(cloudfront_generated_1()).CfnOriginRequestPolicy(this,"Resource",{originRequestPolicyConfig:{name:originRequestPolicyName,comment:props.comment,cookiesConfig:{cookieBehavior:cookies.behavior,cookies:cookies.cookies},headersConfig:{headerBehavior:headers.behavior,headers:headers.headers},queryStringsConfig:{queryStringBehavior:queryStrings.behavior,queryStrings:queryStrings.queryStrings}}});this.originRequestPolicyRef=resource.originRequestPolicyRef,this.originRequestPolicyId=resource.ref}static{__runInitializers(_classThis,_classExtraInitializers)}};return OriginRequestPolicy2=_classThis})();exports.OriginRequestPolicy=OriginRequestPolicy;class OriginRequestCookieBehavior{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.OriginRequestCookieBehavior",version:"2.220.0"};static none(){return new OriginRequestCookieBehavior("none")}static all(){return new OriginRequestCookieBehavior("all")}static denyList(...cookies){if(cookies.length===0)throw new(core_1()).UnscopedValidationError("At least one cookie to deny must be provided");return new OriginRequestCookieBehavior("allExcept",cookies)}static allowList(...cookies){if(cookies.length===0)throw new(core_1()).UnscopedValidationError("At least one cookie to allow must be provided");return new OriginRequestCookieBehavior("whitelist",cookies)}behavior;cookies;constructor(behavior,cookies){this.behavior=behavior,this.cookies=cookies}}exports.OriginRequestCookieBehavior=OriginRequestCookieBehavior;class OriginRequestHeaderBehavior{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.OriginRequestHeaderBehavior",version:"2.220.0"};static none(){return new OriginRequestHeaderBehavior("none")}static all(...cloudfrontHeaders){if(cloudfrontHeaders.length>0){if(!cloudfrontHeaders.every(header=>header.startsWith("CloudFront-")))throw new(core_1()).UnscopedValidationError("additional CloudFront headers passed to `OriginRequestHeaderBehavior.all()` must begin with 'CloudFront-'");return new OriginRequestHeaderBehavior("allViewerAndWhitelistCloudFront",cloudfrontHeaders)}else return new OriginRequestHeaderBehavior("allViewer")}static allowList(...headers){if(headers.length===0)throw new(core_1()).UnscopedValidationError("At least one header to allow must be provided");if(headers.map(header=>header.toLowerCase()).some(header=>["authorization","accept-encoding"].includes(header)))throw new(core_1()).UnscopedValidationError("you cannot pass `Authorization` or `Accept-Encoding` as header values; use a CachePolicy to forward these headers instead");return new OriginRequestHeaderBehavior("whitelist",headers)}static denyList(...headers){if(headers.length===0)throw new(core_1()).UnscopedValidationError("At least one header to deny must be provided");return new OriginRequestHeaderBehavior("allExcept",headers)}behavior;headers;constructor(behavior,headers){this.behavior=behavior,this.headers=headers}}exports.OriginRequestHeaderBehavior=OriginRequestHeaderBehavior;class OriginRequestQueryStringBehavior{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_cloudfront.OriginRequestQueryStringBehavior",version:"2.220.0"};static none(){return new OriginRequestQueryStringBehavior("none")}static all(){return new OriginRequestQueryStringBehavior("all")}static allowList(...queryStrings){if(queryStrings.length===0)throw new(core_1()).UnscopedValidationError("At least one query string to allow must be provided");return new OriginRequestQueryStringBehavior("whitelist",queryStrings)}static denyList(...queryStrings){if(queryStrings.length===0)throw new(core_1()).UnscopedValidationError("At least one query string to deny must be provided");return new OriginRequestQueryStringBehavior("allExcept",queryStrings)}behavior;queryStrings;constructor(behavior,queryStrings){this.behavior=behavior,this.queryStrings=queryStrings}}exports.OriginRequestQueryStringBehavior=OriginRequestQueryStringBehavior;
