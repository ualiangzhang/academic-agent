"use strict";var __esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0},__runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.InsufficientDataHealthStatusEnum=exports.HealthCheck=exports.HealthCheckType=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var route53_generated_1=()=>{var tmp=require("./route53.generated");return route53_generated_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},HealthCheckType;(function(HealthCheckType2){HealthCheckType2.HTTP="HTTP",HealthCheckType2.HTTPS="HTTPS",HealthCheckType2.HTTP_STR_MATCH="HTTP_STR_MATCH",HealthCheckType2.HTTPS_STR_MATCH="HTTPS_STR_MATCH",HealthCheckType2.TCP="TCP",HealthCheckType2.CLOUDWATCH_METRIC="CLOUDWATCH_METRIC",HealthCheckType2.CALCULATED="CALCULATED",HealthCheckType2.RECOVERY_CONTROL="RECOVERY_CONTROL"})(HealthCheckType||(exports.HealthCheckType=HealthCheckType={}));let HealthCheck=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=core_1().Resource;var HealthCheck2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),HealthCheck2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_route53.HealthCheck",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-route53.HealthCheck";static fromHealthCheckId(scope,id,healthCheckId){class Import extends core_1().Resource{healthCheckId=healthCheckId}return new Import(scope,id)}healthCheckId;constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_route53_HealthCheckProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,HealthCheck2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const resource=new(route53_generated_1()).CfnHealthCheck(this,"Resource",{healthCheckConfig:{type:props.type,alarmIdentifier:props.alarmIdentifier,childHealthChecks:props.childHealthChecks?.map(childHealthCheck=>childHealthCheck.healthCheckId),enableSni:props.enableSNI??getDefaultEnableSNIForType(props.type),failureThreshold:props.failureThreshold??getDefaultFailureThresholdForType(props.type),fullyQualifiedDomainName:props.fqdn,healthThreshold:props.healthThreshold??getDefaultHealthThresholdForType(props),insufficientDataHealthStatus:props.insufficientDataHealthStatus??getDefaultInsufficientDataHealthStatusForType(props.type),inverted:props.inverted??!1,ipAddress:props.ipAddress,measureLatency:props.measureLatency??getDefaultMeasureLatencyForType(props.type),port:props.port??getDefaultPortForType(props.type),regions:props.regions,requestInterval:props.requestInterval?.toSeconds()??getDefaultRequestIntervalForType(props.type)?.toSeconds(),resourcePath:props.resourcePath??getDefaultResourcePathForType(props.type),routingControlArn:props.routingControl,searchString:props.searchString}});this.healthCheckId=resource.ref}static{__runInitializers(_classThis,_classExtraInitializers)}};return HealthCheck2=_classThis})();exports.HealthCheck=HealthCheck;function getDefaultResourcePathForType(type){switch(type){case HealthCheckType.HTTP:case HealthCheckType.HTTP_STR_MATCH:case HealthCheckType.HTTPS:case HealthCheckType.HTTPS_STR_MATCH:return"";default:return}}function getDefaultInsufficientDataHealthStatusForType(type){if(type===HealthCheckType.CLOUDWATCH_METRIC)return InsufficientDataHealthStatusEnum.LAST_KNOWN_STATUS}function getDefaultMeasureLatencyForType(type){switch(type){case HealthCheckType.CALCULATED:case HealthCheckType.CLOUDWATCH_METRIC:case HealthCheckType.RECOVERY_CONTROL:return;default:return!1}}function getDefaultHealthThresholdForType(props){if(props.type===HealthCheckType.CALCULATED)return props.childHealthChecks.length}function getDefaultFailureThresholdForType(type){switch(type){case HealthCheckType.CALCULATED:case HealthCheckType.CLOUDWATCH_METRIC:case HealthCheckType.RECOVERY_CONTROL:return;default:return 3}}function getDefaultRequestIntervalForType(type){switch(type){case HealthCheckType.CALCULATED:case HealthCheckType.CLOUDWATCH_METRIC:case HealthCheckType.RECOVERY_CONTROL:return;default:return core_1().Duration.seconds(30)}}function getDefaultEnableSNIForType(type){switch(type){case HealthCheckType.HTTPS:case HealthCheckType.HTTPS_STR_MATCH:return!0;default:return}}function getDefaultPortForType(type){switch(type){case HealthCheckType.HTTP:case HealthCheckType.HTTP_STR_MATCH:return 80;case HealthCheckType.HTTPS:case HealthCheckType.HTTPS_STR_MATCH:return 443;default:return}}var InsufficientDataHealthStatusEnum;(function(InsufficientDataHealthStatusEnum2){InsufficientDataHealthStatusEnum2.HEALTHY="Healthy",InsufficientDataHealthStatusEnum2.UNHEALTHY="Unhealthy",InsufficientDataHealthStatusEnum2.LAST_KNOWN_STATUS="LastKnownStatus"})(InsufficientDataHealthStatusEnum||(exports.InsufficientDataHealthStatusEnum=InsufficientDataHealthStatusEnum={}));
