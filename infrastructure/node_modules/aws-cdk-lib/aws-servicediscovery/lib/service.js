"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HealthCheckType=exports.RoutingPolicy=exports.DnsRecordType=exports.DiscoveryType=exports.Service=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var alias_target_instance_1=()=>{var tmp=require("./alias-target-instance");return alias_target_instance_1=()=>tmp,tmp},cname_instance_1=()=>{var tmp=require("./cname-instance");return cname_instance_1=()=>tmp,tmp},ip_instance_1=()=>{var tmp=require("./ip-instance");return ip_instance_1=()=>tmp,tmp},namespace_1=()=>{var tmp=require("./namespace");return namespace_1=()=>tmp,tmp},non_ip_instance_1=()=>{var tmp=require("./non-ip-instance");return non_ip_instance_1=()=>tmp,tmp},utils_1=()=>{var tmp=require("./private/utils");return utils_1=()=>tmp,tmp},servicediscovery_generated_1=()=>{var tmp=require("./servicediscovery.generated");return servicediscovery_generated_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};class ServiceBase extends core_1().Resource{}let Service=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=ServiceBase,_instanceExtraInitializers=[],_registerLoadBalancer_decorators,_registerNonIpInstance_decorators,_registerIpInstance_decorators,_registerCnameInstance_decorators;var Service2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_registerLoadBalancer_decorators=[(0,metadata_resource_1().MethodMetadata)()],_registerNonIpInstance_decorators=[(0,metadata_resource_1().MethodMetadata)()],_registerIpInstance_decorators=[(0,metadata_resource_1().MethodMetadata)()],_registerCnameInstance_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_registerLoadBalancer_decorators,{kind:"method",name:"registerLoadBalancer",static:!1,private:!1,access:{has:obj=>"registerLoadBalancer"in obj,get:obj=>obj.registerLoadBalancer},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_registerNonIpInstance_decorators,{kind:"method",name:"registerNonIpInstance",static:!1,private:!1,access:{has:obj=>"registerNonIpInstance"in obj,get:obj=>obj.registerNonIpInstance},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_registerIpInstance_decorators,{kind:"method",name:"registerIpInstance",static:!1,private:!1,access:{has:obj=>"registerIpInstance"in obj,get:obj=>obj.registerIpInstance},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_registerCnameInstance_decorators,{kind:"method",name:"registerCnameInstance",static:!1,private:!1,access:{has:obj=>"registerCnameInstance"in obj,get:obj=>obj.registerCnameInstance},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),Service2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_servicediscovery.Service",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-servicediscovery.Service";static fromServiceAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_ServiceAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromServiceAttributes),error}class Import extends ServiceBase{namespace=attrs.namespace;serviceId=attrs.serviceId;serviceArn=attrs.serviceArn;dnsRecordType=attrs.dnsRecordType;routingPolicy=attrs.routingPolicy;serviceName=attrs.serviceName;discoveryType=attrs.discoveryType||(0,utils_1().defaultDiscoveryType)(attrs.namespace)}return new Import(scope,id)}serviceName=__runInitializers(this,_instanceExtraInitializers);namespace;serviceId;serviceArn;dnsRecordType;routingPolicy;discoveryType;constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_ServiceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,Service2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);const namespaceType=props.namespace.type,discoveryType=props.discoveryType||(0,utils_1().defaultDiscoveryType)(props.namespace);if(namespaceType==namespace_1().NamespaceType.HTTP&&discoveryType==DiscoveryType.DNS_AND_API)throw new(core_1()).ValidationError("Cannot specify `discoveryType` of DNS_AND_API when using an HTTP namespace.",this);if(discoveryType===DiscoveryType.API&&(props.routingPolicy||props.dnsRecordType))throw new(core_1()).ValidationError("Cannot specify `routingPolicy` or `dnsRecord` when using an HTTP namespace.",this);if(props.healthCheck&&props.customHealthCheck)throw new(core_1()).ValidationError("Cannot specify both `healthCheckConfig` and `healthCheckCustomConfig`.",this);if(namespaceType===namespace_1().NamespaceType.DNS_PRIVATE&&props.healthCheck)throw new(core_1()).ValidationError("Cannot specify `healthCheckConfig` for a Private DNS namespace.",this);if(props.routingPolicy===RoutingPolicy.MULTIVALUE&&props.dnsRecordType===DnsRecordType.CNAME)throw new(core_1()).ValidationError("Cannot use `CNAME` record when routing policy is `Multivalue`.",this);if(props.routingPolicy===RoutingPolicy.MULTIVALUE&&props.loadBalancer)throw new(core_1()).ValidationError("Cannot register loadbalancers when routing policy is `Multivalue`.",this);if(props.healthCheck&&props.healthCheck.type===HealthCheckType.TCP&&props.healthCheck.resourcePath)throw new(core_1()).ValidationError("Cannot specify `resourcePath` when using a `TCP` health check.",this);const routingPolicy=props.dnsRecordType===DnsRecordType.CNAME||props.loadBalancer?RoutingPolicy.WEIGHTED:RoutingPolicy.MULTIVALUE,dnsRecordType=props.dnsRecordType||DnsRecordType.A;if(props.loadBalancer&&!(dnsRecordType===DnsRecordType.A||dnsRecordType===DnsRecordType.AAAA||dnsRecordType===DnsRecordType.A_AAAA))throw new(core_1()).ValidationError("Must support `A` or `AAAA` records to register loadbalancers.",this);const dnsConfig=discoveryType===DiscoveryType.API?void 0:{dnsRecords:renderDnsRecords(dnsRecordType,props.dnsTtl),namespaceId:props.namespace.namespaceId,routingPolicy},healthCheckConfigDefaults={type:HealthCheckType.HTTP,failureThreshold:1,resourcePath:props.healthCheck&&props.healthCheck.type!==HealthCheckType.TCP?"/":void 0},healthCheckConfig=props.healthCheck&&{...healthCheckConfigDefaults,...props.healthCheck},healthCheckCustomConfig=props.customHealthCheck,service=new(servicediscovery_generated_1()).CfnService(this,"Resource",{name:props.name,description:props.description,dnsConfig,healthCheckConfig,healthCheckCustomConfig,namespaceId:props.namespace.namespaceId,type:props.discoveryType==DiscoveryType.API?"HTTP":void 0});this.serviceName=service.attrName,this.serviceArn=service.attrArn,this.serviceId=service.attrId,this.namespace=props.namespace,this.dnsRecordType=dnsRecordType,this.routingPolicy=routingPolicy,this.discoveryType=discoveryType}registerLoadBalancer(id,loadBalancer,customAttributes){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_ILoadBalancerV2(loadBalancer)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.registerLoadBalancer),error}return new(alias_target_instance_1()).AliasTargetInstance(this,id,{service:this,dnsName:loadBalancer.loadBalancerDnsName,customAttributes})}registerNonIpInstance(id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_NonIpInstanceBaseProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.registerNonIpInstance),error}return new(non_ip_instance_1()).NonIpInstance(this,id,{service:this,...props})}registerIpInstance(id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_IpInstanceBaseProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.registerIpInstance),error}return new(ip_instance_1()).IpInstance(this,id,{service:this,...props})}registerCnameInstance(id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_CnameInstanceBaseProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.registerCnameInstance),error}return new(cname_instance_1()).CnameInstance(this,id,{service:this,...props})}static{__runInitializers(_classThis,_classExtraInitializers)}};return Service2=_classThis})();exports.Service=Service;function renderDnsRecords(dnsRecordType,dnsTtl=core_1().Duration.minutes(1)){const ttl=dnsTtl.toSeconds();return dnsRecordType===DnsRecordType.A_AAAA?[{type:DnsRecordType.A,ttl},{type:DnsRecordType.AAAA,ttl}]:[{type:dnsRecordType,ttl}]}var DiscoveryType;(function(DiscoveryType2){DiscoveryType2.API="API",DiscoveryType2.DNS_AND_API="DNS_AND_API"})(DiscoveryType||(exports.DiscoveryType=DiscoveryType={}));var DnsRecordType;(function(DnsRecordType2){DnsRecordType2.A="A",DnsRecordType2.AAAA="AAAA",DnsRecordType2.A_AAAA="A, AAAA",DnsRecordType2.SRV="SRV",DnsRecordType2.CNAME="CNAME"})(DnsRecordType||(exports.DnsRecordType=DnsRecordType={}));var RoutingPolicy;(function(RoutingPolicy2){RoutingPolicy2.WEIGHTED="WEIGHTED",RoutingPolicy2.MULTIVALUE="MULTIVALUE"})(RoutingPolicy||(exports.RoutingPolicy=RoutingPolicy={}));var HealthCheckType;(function(HealthCheckType2){HealthCheckType2.HTTP="HTTP",HealthCheckType2.HTTPS="HTTPS",HealthCheckType2.TCP="TCP"})(HealthCheckType||(exports.HealthCheckType=HealthCheckType={}));
