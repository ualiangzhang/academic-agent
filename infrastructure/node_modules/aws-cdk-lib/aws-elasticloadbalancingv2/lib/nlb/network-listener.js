"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NetworkListener=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var network_listener_action_1=()=>{var tmp=require("./network-listener-action");return network_listener_action_1=()=>tmp,tmp},network_listener_certificate_1=()=>{var tmp=require("./network-listener-certificate");return network_listener_certificate_1=()=>tmp,tmp},network_target_group_1=()=>{var tmp=require("./network-target-group");return network_target_group_1=()=>tmp,tmp},cxschema=()=>{var tmp=require("../../../cloud-assembly-schema");return cxschema=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},errors_1=()=>{var tmp=require("../../../core/lib/errors");return errors_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},base_listener_1=()=>{var tmp=require("../shared/base-listener");return base_listener_1=()=>tmp,tmp},enums_1=()=>{var tmp=require("../shared/enums");return enums_1=()=>tmp,tmp},util_1=()=>{var tmp=require("../shared/util");return util_1=()=>tmp,tmp};let NetworkListener=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=base_listener_1().BaseListener,_instanceExtraInitializers=[],_addCertificates_decorators,_addTargetGroups_decorators,_addAction_decorators,_addTargets_decorators;var NetworkListener2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_addCertificates_decorators=[(0,metadata_resource_1().MethodMetadata)()],_addTargetGroups_decorators=[(0,metadata_resource_1().MethodMetadata)()],_addAction_decorators=[(0,metadata_resource_1().MethodMetadata)()],_addTargets_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_addCertificates_decorators,{kind:"method",name:"addCertificates",static:!1,private:!1,access:{has:obj=>"addCertificates"in obj,get:obj=>obj.addCertificates},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_addTargetGroups_decorators,{kind:"method",name:"addTargetGroups",static:!1,private:!1,access:{has:obj=>"addTargetGroups"in obj,get:obj=>obj.addTargetGroups},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_addAction_decorators,{kind:"method",name:"addAction",static:!1,private:!1,access:{has:obj=>"addAction"in obj,get:obj=>obj.addAction},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_addTargets_decorators,{kind:"method",name:"addTargets",static:!1,private:!1,access:{has:obj=>"addTargets"in obj,get:obj=>obj.addTargets},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),NetworkListener2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-elasticloadbalancingv2.NetworkListener";static fromLookup(scope,id,options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerLookupOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromLookup),error}let listenerProtocol;if(options.listenerProtocol)switch((0,util_1().validateNetworkProtocol)(options.listenerProtocol),options.listenerProtocol){case enums_1().Protocol.TCP:listenerProtocol=cxschema().LoadBalancerListenerProtocol.TCP;break;case enums_1().Protocol.UDP:listenerProtocol=cxschema().LoadBalancerListenerProtocol.UDP;break;case enums_1().Protocol.TCP_UDP:listenerProtocol=cxschema().LoadBalancerListenerProtocol.TCP_UDP;break;case enums_1().Protocol.TLS:listenerProtocol=cxschema().LoadBalancerListenerProtocol.TLS;break}const props=base_listener_1().BaseListener._queryContextProvider(scope,{userOptions:options,listenerProtocol,loadBalancerType:cxschema().LoadBalancerType.NETWORK});class LookedUp extends core_1().Resource{listenerArn=props.listenerArn}return new LookedUp(scope,id)}static fromNetworkListenerArn(scope,id,networkListenerArn){class Import extends core_1().Resource{listenerArn=networkListenerArn}return new Import(scope,id)}loadBalancer=__runInitializers(this,_instanceExtraInitializers);certificateArns;protocol;constructor(scope,id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,NetworkListener2),error}const certs=props.certificates||[],proto=props.protocol||(certs.length>0?enums_1().Protocol.TLS:enums_1().Protocol.TCP);if((0,util_1().validateNetworkProtocol)(proto),proto===enums_1().Protocol.TLS&&certs.filter(v=>v!=null).length===0)throw new(errors_1()).ValidationError("When the protocol is set to TLS, you must specify certificates",scope);if(proto!==enums_1().Protocol.TLS&&certs.length>0)throw new(errors_1()).ValidationError("Protocol must be TLS when certificates have been specified",scope);if(proto!==enums_1().Protocol.TLS&&props.alpnPolicy)throw new(errors_1()).ValidationError("Protocol must be TLS when alpnPolicy have been specified",scope);if(super(scope,id,{loadBalancerArn:props.loadBalancer.loadBalancerArn,protocol:proto,port:props.port,sslPolicy:props.sslPolicy,certificates:core_1().Lazy.any({produce:()=>this.certificateArns.map(certificateArn=>({certificateArn}))},{omitEmptyArray:!0}),alpnPolicy:props.alpnPolicy?[props.alpnPolicy]:void 0}),(0,metadata_resource_1().addConstructMetadata)(this,props),this.certificateArns=[],this.loadBalancer=props.loadBalancer,this.protocol=proto,certs.length>0&&this.addCertificates("DefaultCertificates",certs),props.defaultAction&&props.defaultTargetGroups)throw new(errors_1()).ValidationError("Specify at most one of 'defaultAction' and 'defaultTargetGroups'",this);if(props.defaultAction&&this.setDefaultAction(props.defaultAction),props.defaultTargetGroups&&this.setDefaultAction(network_listener_action_1().NetworkListenerAction.forward(props.defaultTargetGroups)),props.tcpIdleTimeout!==void 0&&!core_1().Token.isUnresolved(props.tcpIdleTimeout)){if(props.tcpIdleTimeout.toMilliseconds()<core_1().Duration.seconds(1).toMilliseconds())throw new(errors_1()).ValidationError(`\`tcpIdleTimeout\` must be between 60 and 6000 seconds, got ${props.tcpIdleTimeout.toMilliseconds()} milliseconds.`,this);const tcpIdleTimeoutSeconds=props.tcpIdleTimeout.toSeconds();if(proto===enums_1().Protocol.UDP)throw new(errors_1()).ValidationError("`tcpIdleTimeout` cannot be set when `protocol` is `Protocol.UDP`.",this);if(tcpIdleTimeoutSeconds<60||tcpIdleTimeoutSeconds>6e3)throw new(errors_1()).ValidationError(`\`tcpIdleTimeout\` must be between 60 and 6000 seconds, got ${tcpIdleTimeoutSeconds} seconds.`,this);this.setAttribute("tcp.idle_timeout.seconds",tcpIdleTimeoutSeconds.toString())}}addCertificates(id,certificates){const additionalCerts=[...certificates];if(this.certificateArns.length===0&&additionalCerts.length>0){const first=additionalCerts.splice(0,1)[0];this.certificateArns.push(first.certificateArn)}for(let i=0;i<additionalCerts.length;i++)new(network_listener_certificate_1()).NetworkListenerCertificate(this,`${id}${i+1}`,{listener:this,certificates:[additionalCerts[i]]})}addTargetGroups(_id,...targetGroups){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup(targetGroups)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addTargetGroups),error}this.setDefaultAction(network_listener_action_1().NetworkListenerAction.forward(targetGroups))}addAction(_id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkActionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addAction),error}this.setDefaultAction(props.action)}addTargets(id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkTargetsProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addTargets),error}if(!this.loadBalancer.vpc)throw new(errors_1()).ValidationError("Can only call addTargets() when using a constructed Load Balancer or imported Load Balancer with specified VPC; construct a new TargetGroup and use addTargetGroup",this);const group=new(network_target_group_1()).NetworkTargetGroup(this,id+"Group",{deregistrationDelay:props.deregistrationDelay,healthCheck:props.healthCheck,port:props.port,protocol:props.protocol??this.protocol,proxyProtocolV2:props.proxyProtocolV2,preserveClientIp:props.preserveClientIp,targetGroupName:props.targetGroupName,targets:props.targets,vpc:this.loadBalancer.vpc});return this.addTargetGroups(id,group),group}setDefaultAction(action){action.bind(this,this),this._setDefaultAction(action)}static{__runInitializers(_classThis,_classExtraInitializers)}};return NetworkListener2=_classThis})();exports.NetworkListener=NetworkListener;
