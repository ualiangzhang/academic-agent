"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NetworkLoadBalancer=exports.ClientRoutingPolicy=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var network_listener_1=()=>{var tmp=require("./network-listener");return network_listener_1=()=>tmp,tmp},cloudwatch=()=>{var tmp=require("../../../aws-cloudwatch");return cloudwatch=()=>tmp,tmp},ec2=()=>{var tmp=require("../../../aws-ec2");return ec2=()=>tmp,tmp},cxschema=()=>{var tmp=require("../../../cloud-assembly-schema");return cxschema=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},errors_1=()=>{var tmp=require("../../../core/lib/errors");return errors_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},cxapi=()=>{var tmp=require("../../../cx-api");return cxapi=()=>tmp,tmp},elasticloadbalancingv2_canned_metrics_generated_1=()=>{var tmp=require("../elasticloadbalancingv2-canned-metrics.generated");return elasticloadbalancingv2_canned_metrics_generated_1=()=>tmp,tmp},base_load_balancer_1=()=>{var tmp=require("../shared/base-load-balancer");return base_load_balancer_1=()=>tmp,tmp},enums_1=()=>{var tmp=require("../shared/enums");return enums_1=()=>tmp,tmp},util_1=()=>{var tmp=require("../shared/util");return util_1=()=>tmp,tmp},ClientRoutingPolicy;(function(ClientRoutingPolicy2){ClientRoutingPolicy2.AVAILABILITY_ZONE_AFFINITY="availability_zone_affinity",ClientRoutingPolicy2.PARTIAL_AVAILABILITY_ZONE_AFFINITY="partial_availability_zone_affinity",ClientRoutingPolicy2.ANY_AVAILABILITY_ZONE="any_availability_zone"})(ClientRoutingPolicy||(exports.ClientRoutingPolicy=ClientRoutingPolicy={}));class NetworkLoadBalancerMetrics{loadBalancerFullName;scope;constructor(scope,loadBalancerFullName){this.scope=scope,this.loadBalancerFullName=loadBalancerFullName}custom(metricName,props){return new(cloudwatch()).Metric({namespace:"AWS/NetworkELB",metricName,dimensionsMap:{LoadBalancer:this.loadBalancerFullName},...props}).attachTo(this.scope)}activeFlowCount(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.activeFlowCountAverage,props)}consumedLCUs(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.consumedLcUsAverage,{statistic:"Sum",...props})}newFlowCount(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.newFlowCountSum,props)}processedBytes(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.processedBytesSum,props)}tcpClientResetCount(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.tcpClientResetCountSum,props)}tcpElbResetCount(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.tcpElbResetCountSum,props)}tcpTargetResetCount(props){return this.cannedMetric(elasticloadbalancingv2_canned_metrics_generated_1().NetworkELBMetrics.tcpTargetResetCountSum,props)}cannedMetric(fn,props){return new(cloudwatch()).Metric({...fn({LoadBalancer:this.loadBalancerFullName}),...props}).attachTo(this.scope)}}let NetworkLoadBalancer=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=base_load_balancer_1().BaseLoadBalancer,_instanceExtraInitializers=[],_addListener_decorators,_addSecurityGroup_decorators,_metric_decorators,_metricActiveFlowCount_decorators,_metricConsumedLCUs_decorators,_metricHealthyHostCount_decorators,_metricUnHealthyHostCount_decorators,_metricNewFlowCount_decorators,_metricProcessedBytes_decorators,_metricTcpClientResetCount_decorators,_metricTcpElbResetCount_decorators,_metricTcpTargetResetCount_decorators;var NetworkLoadBalancer2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_addListener_decorators=[(0,metadata_resource_1().MethodMetadata)()],_addSecurityGroup_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metric_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricActiveFlowCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricConsumedLCUs_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricHealthyHostCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricUnHealthyHostCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricNewFlowCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricProcessedBytes_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricTcpClientResetCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricTcpElbResetCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],_metricTcpTargetResetCount_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_addListener_decorators,{kind:"method",name:"addListener",static:!1,private:!1,access:{has:obj=>"addListener"in obj,get:obj=>obj.addListener},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_addSecurityGroup_decorators,{kind:"method",name:"addSecurityGroup",static:!1,private:!1,access:{has:obj=>"addSecurityGroup"in obj,get:obj=>obj.addSecurityGroup},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metric_decorators,{kind:"method",name:"metric",static:!1,private:!1,access:{has:obj=>"metric"in obj,get:obj=>obj.metric},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricActiveFlowCount_decorators,{kind:"method",name:"metricActiveFlowCount",static:!1,private:!1,access:{has:obj=>"metricActiveFlowCount"in obj,get:obj=>obj.metricActiveFlowCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricConsumedLCUs_decorators,{kind:"method",name:"metricConsumedLCUs",static:!1,private:!1,access:{has:obj=>"metricConsumedLCUs"in obj,get:obj=>obj.metricConsumedLCUs},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricHealthyHostCount_decorators,{kind:"method",name:"metricHealthyHostCount",static:!1,private:!1,access:{has:obj=>"metricHealthyHostCount"in obj,get:obj=>obj.metricHealthyHostCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricUnHealthyHostCount_decorators,{kind:"method",name:"metricUnHealthyHostCount",static:!1,private:!1,access:{has:obj=>"metricUnHealthyHostCount"in obj,get:obj=>obj.metricUnHealthyHostCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricNewFlowCount_decorators,{kind:"method",name:"metricNewFlowCount",static:!1,private:!1,access:{has:obj=>"metricNewFlowCount"in obj,get:obj=>obj.metricNewFlowCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricProcessedBytes_decorators,{kind:"method",name:"metricProcessedBytes",static:!1,private:!1,access:{has:obj=>"metricProcessedBytes"in obj,get:obj=>obj.metricProcessedBytes},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricTcpClientResetCount_decorators,{kind:"method",name:"metricTcpClientResetCount",static:!1,private:!1,access:{has:obj=>"metricTcpClientResetCount"in obj,get:obj=>obj.metricTcpClientResetCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricTcpElbResetCount_decorators,{kind:"method",name:"metricTcpElbResetCount",static:!1,private:!1,access:{has:obj=>"metricTcpElbResetCount"in obj,get:obj=>obj.metricTcpElbResetCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,_metricTcpTargetResetCount_decorators,{kind:"method",name:"metricTcpTargetResetCount",static:!1,private:!1,access:{has:obj=>"metricTcpTargetResetCount"in obj,get:obj=>obj.metricTcpTargetResetCount},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),NetworkLoadBalancer2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-elasticloadbalancingv2.NetworkLoadBalancer";static fromLookup(scope,id,options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerLookupOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromLookup),error}const props=base_load_balancer_1().BaseLoadBalancer._queryContextProvider(scope,{userOptions:options,loadBalancerType:cxschema().LoadBalancerType.NETWORK});return new LookedUpNetworkLoadBalancer(scope,id,props)}static fromNetworkLoadBalancerAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromNetworkLoadBalancerAttributes),error}class Import extends core_1().Resource{connections=new(ec2()).Connections({securityGroups:attrs.loadBalancerSecurityGroups?.map((securityGroupId,index)=>ec2().SecurityGroup.fromSecurityGroupId(this,`SecurityGroup-${index}`,securityGroupId))});loadBalancerArn=attrs.loadBalancerArn;vpc=attrs.vpc;metrics=new NetworkLoadBalancerMetrics(this,(0,util_1().parseLoadBalancerFullName)(attrs.loadBalancerArn));securityGroups=attrs.loadBalancerSecurityGroups;addListener(lid,props){return new(network_listener_1()).NetworkListener(this,lid,{loadBalancer:this,...props})}get loadBalancerCanonicalHostedZoneId(){if(attrs.loadBalancerCanonicalHostedZoneId)return attrs.loadBalancerCanonicalHostedZoneId;throw new(errors_1()).ValidationError(`'loadBalancerCanonicalHostedZoneId' was not provided when constructing Network Load Balancer ${this.node.path} from attributes`,this)}get loadBalancerDnsName(){if(attrs.loadBalancerDnsName)return attrs.loadBalancerDnsName;throw new(errors_1()).ValidationError(`'loadBalancerDnsName' was not provided when constructing Network Load Balancer ${this.node.path} from attributes`,this)}}return new Import(scope,id,{environmentFromArn:attrs.loadBalancerArn})}metrics=__runInitializers(this,_instanceExtraInitializers);ipAddressType;connections;isSecurityGroupsPropertyDefined;_enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;enablePrefixForIpv6SourceNat;get securityGroups(){return this.isSecurityGroupsPropertyDefined||this.connections.securityGroups.length?this.connections.securityGroups.map(sg=>sg.securityGroupId):void 0}constructor(scope,id,props){super(scope,id,props,{type:"network",securityGroups:core_1().Lazy.list({produce:()=>this.securityGroups}),ipAddressType:props.ipAddressType,enforceSecurityGroupInboundRulesOnPrivateLinkTraffic:core_1().Lazy.string({produce:()=>this.enforceSecurityGroupInboundRulesOnPrivateLinkTraffic}),enablePrefixForIpv6SourceNat:props.enablePrefixForIpv6SourceNat===!0?"on":props.enablePrefixForIpv6SourceNat===!1?"off":void 0,subnetMappings:props.subnetMappings});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,NetworkLoadBalancer2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),props.subnetMappings&&props.subnetMappings.length>0){if(props.internetFacing&&props.subnetMappings.some(sm=>sm.privateIpv4Address!==void 0))throw new(errors_1()).ValidationError("Cannot specify `privateIpv4Address` for a internet facing load balancer.",this);if(props.internetFacing!==!0&&props.subnetMappings.some(sm=>sm.allocationId!==void 0))throw new(errors_1()).ValidationError("Cannot specify `allocationId` for a internal load balancer.",this);if(props.enablePrefixForIpv6SourceNat!==!0&&props.subnetMappings.some(sm=>sm.sourceNatIpv6Prefix!==void 0))throw new(errors_1()).ValidationError("Cannot specify `sourceNatIpv6Prefix` for a load balancer that does not have `enablePrefixForIpv6SourceNat` enabled.",this)}const minimumCapacityUnit=props.minimumCapacityUnit;if(minimumCapacityUnit&&!core_1().Token.isUnresolved(minimumCapacityUnit)){const capacityUnitPerAz=minimumCapacityUnit/props.vpc.availabilityZones.length;if(!Number.isInteger(minimumCapacityUnit)||capacityUnitPerAz<2750||capacityUnitPerAz>45e3)throw new(errors_1()).ValidationError(`'minimumCapacityUnit' must be a positive value between 2750 and 45000 per AZ for Network Load Balancer, got ${capacityUnitPerAz} LCU per AZ.`,this)}this.enablePrefixForIpv6SourceNat=props.enablePrefixForIpv6SourceNat,this.metrics=new NetworkLoadBalancerMetrics(this,this.loadBalancerFullName),this.isSecurityGroupsPropertyDefined=!!props.securityGroups,this.connections=new(ec2()).Connections({securityGroups:props.securityGroups}),this.ipAddressType=props.ipAddressType??enums_1().IpAddressType.IPV4,props.clientRoutingPolicy&&this.setAttribute("dns_record.client_routing_policy",props.clientRoutingPolicy),props.zonalShift!==void 0&&this.setAttribute("zonal_shift.config.enabled",props.zonalShift?"true":"false"),this._enforceSecurityGroupInboundRulesOnPrivateLinkTraffic=props.enforceSecurityGroupInboundRulesOnPrivateLinkTraffic}get enforceSecurityGroupInboundRulesOnPrivateLinkTraffic(){if(this._enforceSecurityGroupInboundRulesOnPrivateLinkTraffic!==void 0)return this._enforceSecurityGroupInboundRulesOnPrivateLinkTraffic?"on":"off"}addListener(id,props){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_elasticloadbalancingv2_BaseNetworkListenerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addListener),error}if((props.protocol===enums_1().Protocol.UDP||props.protocol===enums_1().Protocol.TCP_UDP)&&(this.ipAddressType===enums_1().IpAddressType.DUAL_STACK||this.ipAddressType===enums_1().IpAddressType.DUAL_STACK_WITHOUT_PUBLIC_IPV4)&&this.enablePrefixForIpv6SourceNat!==!0)throw new(errors_1()).ValidationError("To add a listener with UDP protocol to a dual stack NLB, 'enablePrefixForIpv6SourceNat' must be set to true.",this);return new(network_listener_1()).NetworkListener(this,id,{loadBalancer:this,...props})}addSecurityGroup(securityGroup){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_ISecurityGroup(securityGroup)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addSecurityGroup),error}this.connections.addSecurityGroup(securityGroup)}metric(metricName,props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metric","Use ``NetworkLoadBalancer.metrics.custom`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metric),error}return new(cloudwatch()).Metric({namespace:"AWS/NetworkELB",metricName,dimensions:{LoadBalancer:this.loadBalancerFullName},...props}).attachTo(this)}metricActiveFlowCount(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricActiveFlowCount","Use ``NetworkLoadBalancer.metrics.activeFlowCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricActiveFlowCount),error}return this.metrics.activeFlowCount(props)}metricConsumedLCUs(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricConsumedLCUs","Use ``NetworkLoadBalancer.metrics.activeFlowCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricConsumedLCUs),error}return this.metrics.consumedLCUs(props)}metricHealthyHostCount(props){return this.metric("HealthyHostCount",{statistic:"Average",...props})}metricUnHealthyHostCount(props){return this.metric("UnHealthyHostCount",{statistic:"Average",...props})}metricNewFlowCount(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricNewFlowCount","Use ``NetworkLoadBalancer.metrics.newFlowCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricNewFlowCount),error}return this.metrics.newFlowCount(props)}metricProcessedBytes(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricProcessedBytes","Use ``NetworkLoadBalancer.metrics.processedBytes`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricProcessedBytes),error}return this.metrics.processedBytes(props)}metricTcpClientResetCount(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricTcpClientResetCount","Use ``NetworkLoadBalancer.metrics.tcpClientResetCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricTcpClientResetCount),error}return this.metrics.tcpClientResetCount(props)}metricTcpElbResetCount(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricTcpElbResetCount","Use ``NetworkLoadBalancer.metrics.tcpElbResetCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricTcpElbResetCount),error}return this.metrics.tcpElbResetCount(props)}metricTcpTargetResetCount(props){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#metricTcpTargetResetCount","Use ``NetworkLoadBalancer.metrics.tcpTargetResetCount`` instead"),jsiiDeprecationWarnings().aws_cdk_lib_aws_cloudwatch_MetricOptions(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.metricTcpTargetResetCount),error}return this.metrics.tcpTargetResetCount(props)}static{__runInitializers(_classThis,_classExtraInitializers)}};return NetworkLoadBalancer2=_classThis})();exports.NetworkLoadBalancer=NetworkLoadBalancer;let LookedUpNetworkLoadBalancer=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=core_1().Resource,_instanceExtraInitializers=[],_addListener_decorators;var LookedUpNetworkLoadBalancer2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_addListener_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_addListener_decorators,{kind:"method",name:"addListener",static:!1,private:!1,access:{has:obj=>"addListener"in obj,get:obj=>obj.addListener},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),LookedUpNetworkLoadBalancer2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-elasticloadbalancingv2.LookedUpNetworkLoadBalancer";loadBalancerCanonicalHostedZoneId=__runInitializers(this,_instanceExtraInitializers);loadBalancerDnsName;loadBalancerArn;vpc;metrics;securityGroups;ipAddressType;connections;constructor(scope,id,props){super(scope,id,{environmentFromArn:props.loadBalancerArn}),(0,metadata_resource_1().addConstructMetadata)(this,props),this.loadBalancerArn=props.loadBalancerArn,this.loadBalancerCanonicalHostedZoneId=props.loadBalancerCanonicalHostedZoneId,this.loadBalancerDnsName=props.loadBalancerDnsName,this.metrics=new NetworkLoadBalancerMetrics(this,(0,util_1().parseLoadBalancerFullName)(props.loadBalancerArn)),this.securityGroups=props.securityGroupIds,this.connections=new(ec2()).Connections({securityGroups:props.securityGroupIds.map((securityGroupId,index)=>ec2().SecurityGroup.fromLookupById(this,`SecurityGroup-${index}`,securityGroupId))}),props.ipAddressType===cxapi().LoadBalancerIpAddressType.IPV4?this.ipAddressType=enums_1().IpAddressType.IPV4:props.ipAddressType===cxapi().LoadBalancerIpAddressType.DUAL_STACK&&(this.ipAddressType=enums_1().IpAddressType.DUAL_STACK),this.vpc=ec2().Vpc.fromLookup(this,"Vpc",{vpcId:props.vpcId})}addListener(lid,props){return new(network_listener_1()).NetworkListener(this,lid,{loadBalancer:this,...props})}static{__runInitializers(_classThis,_classExtraInitializers)}};return LookedUpNetworkLoadBalancer2=_classThis})();
