"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DomainName=exports.EndpointType=exports.SecurityPolicy=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var index_1=()=>{var tmp=require(".././index");return index_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},errors_1=()=>{var tmp=require("../../../core/lib/errors");return errors_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},SecurityPolicy;(function(SecurityPolicy2){SecurityPolicy2.TLS_1_0="TLS_1_0",SecurityPolicy2.TLS_1_2="TLS_1_2"})(SecurityPolicy||(exports.SecurityPolicy=SecurityPolicy={}));var EndpointType;(function(EndpointType2){EndpointType2.EDGE="EDGE",EndpointType2.REGIONAL="REGIONAL"})(EndpointType||(exports.EndpointType=EndpointType={}));let DomainName=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=core_1().Resource,_instanceExtraInitializers=[],_addEndpoint_decorators;var DomainName2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_addEndpoint_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_addEndpoint_decorators,{kind:"method",name:"addEndpoint",static:!1,private:!1,access:{has:obj=>"addEndpoint"in obj,get:obj=>obj.addEndpoint},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),DomainName2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_apigatewayv2.DomainName",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-apigatewayv2.DomainName";static fromDomainNameAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_DomainNameAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromDomainNameAttributes),error}class Import extends core_1().Resource{regionalDomainName=attrs.regionalDomainName;regionalHostedZoneId=attrs.regionalHostedZoneId;name=attrs.name}return new Import(scope,id)}name=__runInitializers(this,_instanceExtraInitializers);regionalDomainName;regionalHostedZoneId;domainNameConfigurations=[];constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_DomainNameProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,DomainName2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),props.domainName==="")throw new(errors_1()).ValidationError("empty string for domainName not allowed",scope);if(props.ownershipCertificate&&!props.mtls)throw new(errors_1()).ValidationError("ownership certificate can only be used with mtls domains",scope);const mtlsConfig=this.configureMTLS(props.mtls),domainNameProps={domainName:props.domainName,domainNameConfigurations:core_1().Lazy.any({produce:()=>this.domainNameConfigurations}),mutualTlsAuthentication:mtlsConfig},resource=new(index_1()).CfnDomainName(this,"Resource",domainNameProps);this.name=resource.ref,this.regionalDomainName=core_1().Token.asString(resource.getAtt("RegionalDomainName")),this.regionalHostedZoneId=core_1().Token.asString(resource.getAtt("RegionalHostedZoneId")),props.certificate&&this.addEndpoint(props)}configureMTLS(mtlsConfig){if(mtlsConfig)return{truststoreUri:mtlsConfig.bucket.s3UrlForObject(mtlsConfig.key),truststoreVersion:mtlsConfig.version}}addEndpoint(options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_EndpointOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addEndpoint),error}const domainNameConfig={certificateArn:options.certificate.certificateArn,certificateName:options.certificateName,endpointType:options.endpointType?options.endpointType?.toString():"REGIONAL",ownershipVerificationCertificateArn:options.ownershipCertificate?.certificateArn,securityPolicy:options.securityPolicy?.toString(),ipAddressType:options.ipAddressType};this.validateEndpointType(domainNameConfig.endpointType),this.domainNameConfigurations.push(domainNameConfig)}validateEndpointType(endpointType){for(let config of this.domainNameConfigurations)if(endpointType&&endpointType==config.endpointType)throw new(errors_1()).ValidationError(`an endpoint with type ${endpointType} already exists`,this)}static{__runInitializers(_classThis,_classExtraInitializers)}};return DomainName2=_classThis})();exports.DomainName=DomainName;
