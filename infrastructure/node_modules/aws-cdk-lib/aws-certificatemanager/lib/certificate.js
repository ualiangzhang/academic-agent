"use strict";var __esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0},__runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ValidationMethod=exports.Certificate=exports.CertificateValidation=exports.KeyAlgorithm=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var certificate_base_1=()=>{var tmp=require("./certificate-base");return certificate_base_1=()=>tmp,tmp},certificatemanager_generated_1=()=>{var tmp=require("./certificatemanager.generated");return certificatemanager_generated_1=()=>tmp,tmp},util_1=()=>{var tmp=require("./util");return util_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};const NAME_TAG="Name";class KeyAlgorithm{name;static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_certificatemanager.KeyAlgorithm",version:"2.220.0"};static RSA_2048=new KeyAlgorithm("RSA_2048");static EC_PRIME256V1=new KeyAlgorithm("EC_prime256v1");static EC_SECP384R1=new KeyAlgorithm("EC_secp384r1");static EC_SECP521R1=new KeyAlgorithm("EC_secp521r1");static RSA_4096=new KeyAlgorithm("RSA_4096");static RSA_3072=new KeyAlgorithm("RSA_3072");static RSA_1024=new KeyAlgorithm("RSA_1024");constructor(name){this.name=name}}exports.KeyAlgorithm=KeyAlgorithm;class CertificateValidation{props;static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_certificatemanager.CertificateValidation",version:"2.220.0"};static fromDns(hostedZone){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_route53_IHostedZone(hostedZone)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromDns),error}return new CertificateValidation({method:ValidationMethod.DNS,hostedZone})}static fromDnsMultiZone(hostedZones){return new CertificateValidation({method:ValidationMethod.DNS,hostedZones})}static fromEmail(validationDomains){return new CertificateValidation({method:ValidationMethod.EMAIL,validationDomains})}method;constructor(props){this.props=props,this.method=props.method??ValidationMethod.EMAIL}}exports.CertificateValidation=CertificateValidation;let Certificate=(()=>{let _classDecorators=[prop_injectable_1().propertyInjectable],_classDescriptor,_classExtraInitializers=[],_classThis,_classSuper=certificate_base_1().CertificateBase;var Certificate2=class extends _classSuper{static{_classThis=this}static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;__esDecorate(null,_classDescriptor={value:_classThis},_classDecorators,{kind:"class",name:_classThis.name,metadata:_metadata},null,_classExtraInitializers),Certificate2=_classThis=_classDescriptor.value,_metadata&&Object.defineProperty(_classThis,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_certificatemanager.Certificate",version:"2.220.0"};static PROPERTY_INJECTION_ID="aws-cdk-lib.aws-certificatemanager.Certificate";static fromCertificateArn(scope,id,certificateArn){class Import extends certificate_base_1().CertificateBase{certificateArn=certificateArn}return new Import(scope,id)}certificateArn;constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_certificatemanager_CertificateProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,Certificate2),error}(0,metadata_resource_1().addConstructMetadata)(this,props);let validation;if(props.validation?validation=props.validation:props.validationMethod===ValidationMethod.DNS?validation=CertificateValidation.fromDns():validation=CertificateValidation.fromEmail(props.validationDomains),!core_1().Token.isUnresolved(props.domainName)&&props.domainName.length>64)throw new(core_1()).ValidationError("Domain name must be 64 characters or less",this);const allDomainNames=[props.domainName].concat(props.subjectAlternativeNames||[]),certificateExport=props.allowExport===!0?"ENABLED":void 0;let certificateTransparencyLoggingPreference;props.transparencyLoggingEnabled!==void 0&&(certificateTransparencyLoggingPreference=props.transparencyLoggingEnabled?"ENABLED":"DISABLED");const cert=new(certificatemanager_generated_1()).CfnCertificate(this,"Resource",{domainName:props.domainName,subjectAlternativeNames:props.subjectAlternativeNames,domainValidationOptions:renderDomainValidation(this,validation,allDomainNames),validationMethod:validation.method,certificateExport,certificateTransparencyLoggingPreference,keyAlgorithm:props.keyAlgorithm?.name});core_1().Tags.of(cert).add(NAME_TAG,props.certificateName||this.node.path.slice(0,255)),this.certificateArn=cert.ref}static{__runInitializers(_classThis,_classExtraInitializers)}};return Certificate2=_classThis})();exports.Certificate=Certificate;var ValidationMethod;(function(ValidationMethod2){ValidationMethod2.EMAIL="EMAIL",ValidationMethod2.DNS="DNS"})(ValidationMethod||(exports.ValidationMethod=ValidationMethod={}));function renderDomainValidation(scope,validation,domainNames){const domainValidation=[];switch(validation.method){case ValidationMethod.DNS:for(const domainName of getUniqueDnsDomainNames(domainNames)){const hostedZone=validation.props.hostedZones?.[domainName]??validation.props.hostedZone;hostedZone&&domainValidation.push({domainName,hostedZoneId:hostedZone.hostedZoneId})}break;case ValidationMethod.EMAIL:for(const domainName of domainNames){const validationDomain=validation.props.validationDomains?.[domainName];if(!validationDomain&&core_1().Token.isUnresolved(domainName))throw new(core_1()).ValidationError("When using Tokens for domain names, 'validationDomains' needs to be supplied",scope);domainValidation.push({domainName,validationDomain:validationDomain??(0,util_1().apexDomain)(domainName)})}break;default:throw new(core_1()).ValidationError(`Unknown validation method ${validation.method}`,scope)}return domainValidation.length!==0?domainValidation:void 0}function getUniqueDnsDomainNames(domainNames){return domainNames.filter(domain=>core_1().Token.isUnresolved(domain)||!domain.startsWith("*.")||!domainNames.includes(domain.replace("*.","")))}
