"use strict";var __runInitializers=exports&&exports.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=exports&&exports.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!="function")throw new TypeError("Function expected");return f}for(var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),_,done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!="object")throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&(kind==="field"?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};Object.defineProperty(exports,"__esModule",{value:!0}),exports.QualifiedFunctionBase=exports.FunctionBase=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var crypto_1=()=>{var tmp=require("crypto");return crypto_1=()=>tmp,tmp},event_invoke_config_1=()=>{var tmp=require("./event-invoke-config");return event_invoke_config_1=()=>tmp,tmp},event_source_mapping_1=()=>{var tmp=require("./event-source-mapping");return event_source_mapping_1=()=>tmp,tmp},function_url_1=()=>{var tmp=require("./function-url");return function_url_1=()=>tmp,tmp},lambda_generated_1=()=>{var tmp=require("./lambda.generated");return lambda_generated_1=()=>tmp,tmp},util_1=()=>{var tmp=require("./util");return util_1=()=>tmp,tmp},iam=()=>{var tmp=require("../../aws-iam");return iam=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},errors_1=()=>{var tmp=require("../../core/lib/errors");return errors_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},cxapi=()=>{var tmp=require("../../cx-api");return cxapi=()=>tmp,tmp};class FunctionBase extends core_1().Resource{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_lambda.FunctionBase",version:"2.220.0"};_skipPermissions;_connections;_latestVersion;_warnIfCurrentVersionCalled=!1;_invocationGrants={};_functionUrlInvocationGrants={};_policyCounter=0;_hasAddedLiteralStatements=!1;_hasAddedArrayTokenStatements=!1;get functionRef(){return{functionName:this.functionName,functionArn:this.functionArn}}considerWarningOnInvokeFunctionPermissions(scope,action){["lambda:InvokeFunction","lambda:*","lambda:Invoke*"].includes(action)&&(scope.node.tryFindChild("CurrentVersion")?this.warnInvokeFunctionPermissions(scope):this._warnIfCurrentVersionCalled=!0)}warnInvokeFunctionPermissions(scope){core_1().Annotations.of(scope).addWarningV2("@aws-cdk/aws-lambda:addPermissionsToVersionOrAlias",["AWS Lambda has changed their authorization strategy, which may cause client invocations using the 'Qualifier' parameter of the lambda function to fail with Access Denied errors.","If you are using a lambda Version or Alias, make sure to call 'grantInvoke' or 'addPermission' on the Version or Alias, not the underlying Function","See: https://github.com/aws/aws-cdk/issues/19273"].join(`
`))}addPermission(id,permission){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_Permission(permission)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addPermission),error}if(!this.canCreatePermissions){this._skipPermissions||core_1().Annotations.of(this).addWarningV2("UnclearLambdaEnvironment",`addPermission() has no effect on a Lambda Function with region=${this.env.region}, account=${this.env.account}, in a Stack with region=${core_1().Stack.of(this).region}, account=${core_1().Stack.of(this).account}. Suppress this warning if this is is intentional, or pass sameEnvironment=true to fromFunctionAttributes() if you would like to add the permissions.`);return}let principal=this.parsePermissionPrincipal(permission.principal),{sourceArn,sourceAccount,principalOrgID}=this.validateConditionCombinations(permission.principal)??{};const action=permission.action??"lambda:InvokeFunction",scope=permission.scope??this;this.considerWarningOnInvokeFunctionPermissions(scope,action),new(lambda_generated_1()).CfnPermission(scope,id,{action,principal,functionName:this.functionArn,eventSourceToken:permission.eventSourceToken,sourceAccount:permission.sourceAccount??sourceAccount,sourceArn:permission.sourceArn??sourceArn,principalOrgId:permission.organizationId??principalOrgID,functionUrlAuthType:permission.functionUrlAuthType,invokedViaFunctionUrl:permission.invokedViaFunctionUrl})}addToRolePolicy(statement){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_PolicyStatement(statement)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addToRolePolicy),error}const useCreateNewPolicies=core_1().FeatureFlags.of(this).isEnabled(cxapi().LAMBDA_CREATE_NEW_POLICIES_WITH_ADDTOROLEPOLICY);if(!this.role)return;const hasArrayTokens=this.statementHasArrayTokens(statement),wouldCauseConflict=hasArrayTokens&&this._hasAddedLiteralStatements||!hasArrayTokens&&this._hasAddedArrayTokenStatements;if(useCreateNewPolicies||wouldCauseConflict){const policyToAdd=new(iam()).Policy(this,`inlinePolicyAddedToExecutionRole-${this._policyCounter++}`,{statements:[statement]});this.role.attachInlinePolicy(policyToAdd)}else this.role.addToPrincipalPolicy(statement),hasArrayTokens?this._hasAddedArrayTokenStatements=!0:this._hasAddedLiteralStatements=!0}get connections(){if(!this._connections)throw new(errors_1()).ValidationError('Only VPC-associated Lambda Functions have security groups to manage. Supply the "vpc" parameter when creating the Lambda, or "securityGroupId" when importing it.',this);return this._connections}get latestVersion(){return this._latestVersion||(this._latestVersion=new LatestVersion(this)),this._latestVersion}get isBoundToVpc(){return!!this._connections}addEventSourceMapping(id,options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_EventSourceMappingOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addEventSourceMapping),error}return new(event_source_mapping_1()).EventSourceMapping(this,id,{target:this,...options})}grantInvoke(grantee){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_IGrantable(grantee)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.grantInvoke),error}const identifier=`Invoke${(0,crypto_1().createHash)("sha256").update(JSON.stringify({principal:grantee.grantPrincipal.toString(),conditions:grantee.grantPrincipal.policyFragment.conditions}),"utf8").digest("base64")}`;let grant=this._invocationGrants[identifier];return grant||(grant=this.grant(grantee,identifier,"lambda:InvokeFunction",this.resourceArnsForGrantInvoke),this._invocationGrants[identifier]=grant),grant}grantInvokeLatestVersion(grantee){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_IGrantable(grantee)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.grantInvokeLatestVersion),error}return this.grantInvokeVersion(grantee,this.latestVersion)}grantInvokeVersion(grantee,version){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_IGrantable(grantee),jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_IVersion(version)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.grantInvokeVersion),error}const identifier=`Invoke${(0,crypto_1().createHash)("sha256").update(JSON.stringify({principal:grantee.grantPrincipal.toString(),conditions:grantee.grantPrincipal.policyFragment.conditions,version:version.version}),"utf8").digest("base64")}`;let grant=this._invocationGrants[identifier];if(!grant){let resouceArns=[`${this.functionArn}:${version.version}`];version==this.latestVersion&&resouceArns.push(this.functionArn),grant=this.grant(grantee,identifier,"lambda:InvokeFunction",resouceArns),this._invocationGrants[identifier]=grant}return grant}grantInvokeUrl(grantee){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_IGrantable(grantee)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.grantInvokeUrl),error}const identifier=`InvokeFunctionUrl${grantee.grantPrincipal}`,identifierDualAuth=`${identifier}-DualAuth`;let grant=this._functionUrlInvocationGrants[identifier];if(!grant){const functionUrlConditions={StringEquals:{"lambda:FunctionUrlAuthType":function_url_1().FunctionUrlAuthType.AWS_IAM}};grant=this.grant(grantee,identifier,"lambda:InvokeFunctionUrl",[this.functionArn],{functionUrlAuthType:function_url_1().FunctionUrlAuthType.AWS_IAM},functionUrlConditions);const dualAuthConditions={Bool:{"lambda:InvokedViaFunctionUrl":!0}};grant=this.grant(grantee,identifierDualAuth,"lambda:InvokeFunction",[this.functionArn],{invokedViaFunctionUrl:!0},dualAuthConditions),this._functionUrlInvocationGrants[identifier]=grant}return grant}grantInvokeCompositePrincipal(compositePrincipal){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_iam_CompositePrincipal(compositePrincipal)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.grantInvokeCompositePrincipal),error}return compositePrincipal.principals.map(principal=>this.grantInvoke(principal))}addEventSource(source){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_IEventSource(source)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addEventSource),error}source.bind(this)}configureAsyncInvoke(options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_EventInvokeConfigOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.configureAsyncInvoke),error}if(this.node.tryFindChild("EventInvokeConfig")!==void 0)throw new(errors_1()).ValidationError(`An EventInvokeConfig has already been configured for the function at ${this.node.path}`,this);new(event_invoke_config_1()).EventInvokeConfig(this,"EventInvokeConfig",{function:this,...options})}addFunctionUrl(options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_FunctionUrlOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addFunctionUrl),error}return new(function_url_1()).FunctionUrl(this,"FunctionUrl",{function:this,...options})}_functionNode(){return this.node}_isStackAccount(){return core_1().Token.isUnresolved(this.stack.account)||core_1().Token.isUnresolved(this.functionArn)?!1:this.stack.splitArn(this.functionArn,core_1().ArnFormat.SLASH_RESOURCE_NAME).account===this.stack.account}grant(grantee,identifier,action,resourceArns,permissionOverrides,conditions){return iam().Grant.addToPrincipalOrResource({grantee,actions:[action],resourceArns,conditions,resource:{addToResourcePolicy:_statement=>{this.addPermission(identifier,{principal:grantee.grantPrincipal,action,...permissionOverrides});const permissionNode=this._functionNode().tryFindChild(identifier);if(!permissionNode&&!this._skipPermissions)throw new(errors_1()).ValidationError("Cannot modify permission to lambda function. Function is either imported or $LATEST version.\nIf the function is imported from the same account use `fromFunctionAttributes()` API with the `sameEnvironment` flag.\nIf the function is imported from a different account and already has the correct permissions use `fromFunctionAttributes()` API with the `skipPermissions` flag.",this);return{statementAdded:!0,policyDependable:permissionNode}},node:this.node,stack:this.stack,env:this.env,applyRemovalPolicy:x=>this.applyRemovalPolicy(x)}})}parsePermissionPrincipal(principal){if("wrapped"in principal&&(principal=principal.wrapped),"accountId"in principal)return principal.accountId;if("service"in principal)return principal.service;if("arn"in principal)return principal.arn;const stringEquals=matchSingleKey("StringEquals",principal.policyFragment.conditions);if(stringEquals&&matchSingleKey("aws:PrincipalOrgID",stringEquals))return"*";const json=principal.policyFragment.principalJson;if(Object.keys(principal.policyFragment.conditions).length===0&&json.AWS){if(typeof json.AWS=="string")return json.AWS;if(Array.isArray(json.AWS)&&json.AWS.length===1&&typeof json.AWS[0]=="string")return json.AWS[0]}throw new(errors_1()).ValidationError(`Invalid principal type for Lambda permission statement: ${principal.constructor.name}. Supported: AccountPrincipal, ArnPrincipal, ServicePrincipal, OrganizationPrincipal`,this);function matchSingleKey(key,obj){if(Object.keys(obj).length===1)return obj[key]}}validateConditionCombinations(principal){const conditions=this.validateConditions(principal);if(!conditions)return;const sourceArn=requireString(requireObject(conditions.ArnLike)?.["aws:SourceArn"]),sourceAccount=requireString(requireObject(conditions.StringEquals)?.["aws:SourceAccount"]),principalOrgID=requireString(requireObject(conditions.StringEquals)?.["aws:PrincipalOrgID"]);if(principalOrgID&&(sourceArn||sourceAccount))throw new(errors_1()).ValidationError("PrincipalWithConditions had unsupported condition combinations for Lambda permission statement: principalOrgID cannot be set with other conditions.",this);return{sourceArn,sourceAccount,principalOrgID}}validateConditions(principal){if(this.isPrincipalWithConditions(principal)){const conditions=principal.policyFragment.conditions,conditionPairs=(0,util_1().flatMap)(Object.entries(conditions),([operator,conditionObjs])=>Object.keys(conditionObjs).map(key=>({operator,key}))),supportedPrincipalConditions=[{operator:"ArnLike",key:"aws:SourceArn"},{operator:"StringEquals",key:"aws:SourceAccount"},{operator:"StringEquals",key:"aws:PrincipalOrgID"}],unsupportedConditions=conditionPairs.filter(condition=>!supportedPrincipalConditions.some(supportedCondition=>supportedCondition.operator===condition.operator&&supportedCondition.key===condition.key));if(unsupportedConditions.length==0)return conditions;throw new(errors_1()).ValidationError(`PrincipalWithConditions had unsupported conditions for Lambda permission statement: ${JSON.stringify(unsupportedConditions)}. Supported operator/condition pairs: ${JSON.stringify(supportedPrincipalConditions)}`,this)}}isPrincipalWithConditions(principal){return Object.keys(principal.policyFragment.conditions).length>0}statementHasArrayTokens(statement){const resources=statement.resources;return resources?core_1().Token.isUnresolved(resources):!1}}exports.FunctionBase=FunctionBase;class QualifiedFunctionBase extends FunctionBase{static[JSII_RTTI_SYMBOL_1]={fqn:"aws-cdk-lib.aws_lambda.QualifiedFunctionBase",version:"2.220.0"};permissionsNode=this.node;get latestVersion(){return this.lambda.latestVersion}get resourceArnsForGrantInvoke(){return[this.functionArn]}configureAsyncInvoke(options){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_lambda_EventInvokeConfigOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.configureAsyncInvoke),error}if(this.node.tryFindChild("EventInvokeConfig")!==void 0)throw new(errors_1()).ValidationError(`An EventInvokeConfig has already been configured for the qualified function at ${this.node.path}`,this);new(event_invoke_config_1()).EventInvokeConfig(this,"EventInvokeConfig",{function:this.lambda,qualifier:this.qualifier,...options})}considerWarningOnInvokeFunctionPermissions(_scope,_action){}}exports.QualifiedFunctionBase=QualifiedFunctionBase;let LatestVersion=(()=>{let _classSuper=FunctionBase,_instanceExtraInitializers=[],_addAlias_decorators;return class extends _classSuper{static{const _metadata=typeof Symbol=="function"&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;_addAlias_decorators=[(0,metadata_resource_1().MethodMetadata)()],__esDecorate(this,null,_addAlias_decorators,{kind:"method",name:"addAlias",static:!1,private:!1,access:{has:obj=>"addAlias"in obj,get:obj=>obj.addAlias},metadata:_metadata},null,_instanceExtraInitializers),_metadata&&Object.defineProperty(this,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}lambda=__runInitializers(this,_instanceExtraInitializers);version="$LATEST";permissionsNode=this.node;canCreatePermissions=!1;constructor(lambda){super(lambda,"$LATEST"),this.lambda=lambda}get versionRef(){return{functionArn:this.functionArn}}get functionRef(){return{functionArn:this.functionArn,functionName:this.functionName}}get functionArn(){return`${this.lambda.functionArn}:${this.version}`}get functionName(){return`${this.lambda.functionName}:${this.version}`}get architecture(){return this.lambda.architecture}get grantPrincipal(){return this.lambda.grantPrincipal}get latestVersion(){return this}get role(){return this.lambda.role}get edgeArn(){throw new(errors_1()).ValidationError("$LATEST function version cannot be used for Lambda@Edge",this)}get resourceArnsForGrantInvoke(){return[this.functionArn]}addAlias(aliasName,options={}){return(0,util_1().addAlias)(this,this,aliasName,options)}}})();function requireObject(x){return x&&typeof x=="object"&&!Array.isArray(x)?x:void 0}function requireString(x){return x&&typeof x=="string"?x:void 0}
